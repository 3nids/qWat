<?xml version="1.0" encoding="UTF-8" ?>
<!-- $Header: /cvsroot/autodoc/autodoc/xml.tmpl,v 1.2 2006/05/16 19:01:27 rbt Exp $ -->

<book id="database.sige" xreflabel="sige database schema"><title>sige Model</title>




  <chapter id="distribution.schema"
           xreflabel="distribution">
    <title>Schema distribution</title>
    <para></para>


      <section id="distribution.table.constructionpoint"
               xreflabel="distribution.constructionpoint">
        <title id="distribution.table.constructionpoint-title">
         Table:
         
         <structname>constructionpoint</structname>
        </title>
 

        <para>
          construction points are artificials points to build objects.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>constructionpoint</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on constructionpoint</title>

          <varlistentry>
            <term>constructionpoint_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.dimension"
               xreflabel="distribution.dimension">
        <title id="distribution.table.dimension-title">
         Table:
         
         <structname>dimension</structname>
        </title>
 

        <para>
          dimension arcs displays measures done on the field. For example: distances to buildings corner
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>dimension</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>type</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>observation</structfield></term>
              <listitem><para>
                <type>double precision</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>distance_extremities</structfield></term>
              <listitem><para>
                <type>double precision</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>observation_text</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on dimension</title>

          <varlistentry>
            <term>dimension_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.distributor"
               xreflabel="distribution.distributor">
        <title id="distribution.table.distributor-title">
         Table:
         
         <structname>distributor</structname>
        </title>
 

        <para>
          Companies and distributors list.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>distributor</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.district"
               xreflabel="distribution.district">
        <title id="distribution.table.district-title">
         Table:
         
         <structname>district</structname>
        </title>
 

        <para>
          Districts.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>district</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>zip</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>land_registry</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>subscriber_prefix</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>





                <literal>DEFAULT 1</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Polygon,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on district</title>

          <varlistentry>
            <term>district_nooverlap</term>
            <listitem><para>CHECK ((st_overlaps(geometry, geometry) IS FALSE))</para></listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on district</title>

          <varlistentry>
            <term>district_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>





        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.leak"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.printmap"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.samplingpoint"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.subscriber"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.hydrant"
               xreflabel="distribution.hydrant">
        <title id="distribution.table.hydrant-title">
         Table:
         
         <structname>hydrant</structname>
        </title>
 

        <para>
          hydrant.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>hydrant</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>character varying(15)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.hydrant-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.distributor"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.status"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_provider</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.hydrant-provider"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>model</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.node"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry_schematic</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on hydrant</title>

          <varlistentry>
            <term>hydrant_year_check</term>
            <listitem><para>CHECK (((year &gt; 1800) AND (year &lt; 2100)))</para></listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on hydrant</title>

          <varlistentry>
            <term>fki_hydrant_id_distributor</term>
            <listitem><para>id_distributor</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_hydrant_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_hydrant_id_node</term>
            <listitem><para>id_node</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_hydrant_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_hydrant_id_provider</term>
            <listitem><para>id_provider</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_hydrant_id_status</term>
            <listitem><para>id_status</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_hydrant_id_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>hydrant_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>hydrant_geoidx_sch</term>
            <listitem><para>geometry_schematic</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.hydrant-provider"
               xreflabel="distribution.hydrant_provider">
        <title id="distribution.table.hydrant-provider-title">
         Table:
         
         <structname>hydrant_provider</structname>
        </title>
 

        <para>
          hydrant providers list.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>hydrant_provider</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.hydrant-type"
               xreflabel="distribution.hydrant_type">
        <title id="distribution.table.hydrant-type-title">
         Table:
         
         <structname>hydrant_type</structname>
        </title>
 

        <para>
          type for hydrant.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>hydrant_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.hydrant-view"
               xreflabel="distribution.hydrant_view">
        <title id="distribution.view.hydrant-view-title">
         View:
         
         <structname>hydrant_view</structname>
        </title>
 

        <para>
          View for hydrant. This view is editable (a rule exists to forwad changes to the table).
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>hydrant_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>character varying(15)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_provider</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>model</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_distributor</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status_name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status_active</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_provider</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_altitude_dtm</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district_shortname</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view hydrant_view</title>
         <programlisting>
SELECT hydrant.id
, hydrant.identification
, hydrant.id_type
, hydrant.id_distributor
, hydrant.id_status
, hydrant.id_provider
, hydrant.year
, hydrant.model
, hydrant.altitude_real
, hydrant.remarks
, hydrant.id_node
, hydrant.id_district
, hydrant.id_pressurezone
, hydrant.id_printmap
, hydrant._printmaps
, hydrant._districts
, hydrant.geometry
, hydrant_type.name AS _type
, distributor.name AS _distributor
, status.name AS _status_name
, status.active AS _status_active
, hydrant_provider.name AS _provider
, node.altitude_dtm AS _altitude_dtm
, district.name AS _district
, district.shortname AS _district_shortname
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (
           (
                 (
                       (
                             (
                                   (distribution.hydrant 
                                      JOIN distribution.hydrant_type 
                                        ON (
                                               (hydrant.id_type = hydrant_type.id)
                                         )
                                   )
                                JOIN distribution.distributor 
                                  ON (
                                         (hydrant.id_distributor = distributor.id)
                                   )
                             )
                          JOIN distribution.status 
                            ON (
                                   (hydrant.id_status = status.id)
                             )
                       )
               LEFT JOIN distribution.hydrant_provider 
                      ON (
                             (hydrant.id_provider = hydrant_provider.id)
                       )
                 )
         LEFT JOIN distribution.node 
                ON (
                       (hydrant.id_node = node.id)
                 )
           )
   LEFT JOIN distribution.district 
          ON (
                 (hydrant.id_district = district.id)
           )
     )
LEFT JOIN distribution.pressurezone 
    ON (
           (hydrant.id_pressurezone = pressurezone.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.installation"
               xreflabel="distribution.installation">
        <title id="distribution.table.installation-title">
         Table:
         
         <structname>installation</structname>
        </title>
 

        <para>
          installation.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_remote</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.remote-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.status"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.distributor"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>links</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>open_water_surface</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>parcel</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>eca</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_complete_name</structfield></term>
              <listitem><para>
                <type>character varying(50)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_force_view</structfield></term>
              <listitem><para>
                <type>boolean</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.visible"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.node"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry_schematic</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on installation</title>

          <varlistentry>
            <term>installation_year_check</term>
            <listitem><para>CHECK (((year &gt; 1800) AND (year &lt; 2100)))</para></listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on installation</title>

          <varlistentry>
            <term>fki_installation_id_distributor</term>
            <listitem><para>id_distributor</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_id_node</term>
            <listitem><para>id_node</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_id_remote_type</term>
            <listitem><para>id_remote</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_id_status</term>
            <listitem><para>id_status</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_id_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_schema_force_view</term>
            <listitem><para>schema_force_view</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>installation_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>installation_geoidx_sch</term>
            <listitem><para>geometry_schematic</para></listitem>
          </varlistentry>

        </variablelist>





        <itemizedlist>
          <title>
            Tables referencing installation_pump via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-pump"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation-source"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation-tank"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation-treatment"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-pump"
               xreflabel="distribution.installation_pump">
        <title id="distribution.table.installation-pump-title">
         Table:
         
         <structname>installation_pump</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_pump</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_installation</structfield></term>
              <listitem><para>
                <type>smallint</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>smallint</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-pump-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_operating</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>nb_pump</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>rejected_flow</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>manometric_height</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on installation_pump</title>

          <varlistentry>
            <term>fki_installation_pump_id_installation</term>
            <listitem><para>id_installation</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_pump_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>installation_pump_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.installation-pump-type"
               xreflabel="distribution.installation_pump_type">
        <title id="distribution.table.installation-pump-type-title">
         Table:
         
         <structname>installation_pump_type</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_pump_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation_pump via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-pump"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-source"
               xreflabel="distribution.installation_source">
        <title id="distribution.table.installation-source-title">
         Table:
         
         <structname>installation_source</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_source</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_installation</structfield></term>
              <listitem><para>
                <type>smallint</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>smallint</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-source-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_quality</structfield></term>
              <listitem><para>
                <type>smallint</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-source-quality"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>flow_lowest</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>flow_mean</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>flow_concession</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>contract_end</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>gathering_chamber</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on installation_source</title>

          <varlistentry>
            <term>fki_installation_source_id_installation</term>
            <listitem><para>id_installation</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_source_quality</term>
            <listitem><para>id_quality</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_source_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>installation_source_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.installation-source-quality"
               xreflabel="distribution.installation_source_quality">
        <title id="distribution.table.installation-source-quality-title">
         Table:
         
         <structname>installation_source_quality</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_source_quality</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation_source via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-source"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-source-type"
               xreflabel="distribution.installation_source_type">
        <title id="distribution.table.installation-source-type-title">
         Table:
         
         <structname>installation_source_type</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_source_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation_source via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-source"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-tank"
               xreflabel="distribution.installation_tank">
        <title id="distribution.table.installation-tank-title">
         Table:
         
         <structname>installation_tank</structname>
        </title>
 

        <para>
          storage tanks. These are related to installations and are made of cisterns
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_tank</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_installation</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_overflow</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-tank-overflowtype"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_firestorage</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-tank-firestoragetype"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>storage_total</structfield></term>
              <listitem><para>
                <type>numeric(10,1)</type>







              </para>

              <para>
                litres
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>storage_supply</structfield></term>
              <listitem><para>
                <type>numeric(10,1)</type>







              </para>

              <para>
                litres
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>storage_fire</structfield></term>
              <listitem><para>
                <type>numeric(10,1)</type>







              </para>

              <para>
                litres
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_overflow</structfield></term>
              <listitem><para>
                <type>numeric(7,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_apron</structfield></term>
              <listitem><para>
                <type>numeric(7,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>height_max</structfield></term>
              <listitem><para>
                <type>numeric(7,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>fire_valve</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>fire_remote</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_litrepercm</structfield></term>
              <listitem><para>
                <type>numeric(9,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern1_id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-tank-cisterntype"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern1_dimension_1</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern1_dimension_2</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern1_storage</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_cistern1_litrepercm</structfield></term>
              <listitem><para>
                <type>numeric(9,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern2_id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation-tank-cisterntype"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern2_dimension_1</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern2_dimension_2</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cistern2_storage</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_cistern2_litrepercm</structfield></term>
              <listitem><para>
                <type>numeric(9,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on installation_tank</title>

          <varlistentry>
            <term>fki_installation_tank_cistern1type</term>
            <listitem><para>cistern1_id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_tank_cistern2type</term>
            <listitem><para>cistern2_id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_tank_id_firestorage</term>
            <listitem><para>id_firestorage</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_tank_id_installation</term>
            <listitem><para>id_installation</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_installation_tank_id_overflow</term>
            <listitem><para>id_overflow</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>installation_tank_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.installation-tank-cisterntype"
               xreflabel="distribution.installation_tank_cisterntype">
        <title id="distribution.table.installation-tank-cisterntype-title">
         Table:
         
         <structname>installation_tank_cisterntype</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_tank_cisterntype</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation_tank via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-tank"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-tank-firestoragetype"
               xreflabel="distribution.installation_tank_firestoragetype">
        <title id="distribution.table.installation-tank-firestoragetype-title">
         Table:
         
         <structname>installation_tank_firestoragetype</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_tank_firestoragetype</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation_tank via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-tank"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-tank-overflowtype"
               xreflabel="distribution.installation_tank_overflowtype">
        <title id="distribution.table.installation-tank-overflowtype-title">
         Table:
         
         <structname>installation_tank_overflowtype</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_tank_overflowtype</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation_tank via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation-tank"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.installation-treatment"
               xreflabel="distribution.installation_treatment">
        <title id="distribution.table.installation-treatment-title">
         Table:
         
         <structname>installation_treatment</structname>
        </title>
 

        <para>
          storage treatments. These are related to installations and are made of cisterns
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_treatment</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_installation</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.installation"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>sanitization_uv</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>sanitization_chlorine_liquid</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>sanitization_chlorine_gazeous</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>sanitization_ozone</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>filtration_membrane</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>filtration_sandorgravel</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>flocculation</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>activatedcharcoal</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>settling</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>treatment_capacity</structfield></term>
              <listitem><para>
                <type>numeric(10,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on installation_treatment</title>

          <varlistentry>
            <term>fki_installation_treatment_id_installation</term>
            <listitem><para>id_installation</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>installation_treatment_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.installation-type"
               xreflabel="distribution.installation_type">
        <title id="distribution.table.installation-type-title">
         Table:
         
         <structname>installation_type</structname>
        </title>
 

        <para>
          type for installation.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(5)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT true</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.installation-view"
               xreflabel="distribution.installation_view">
        <title id="distribution.view.installation-view-title">
         View:
         
         <structname>installation_view</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>installation_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>links</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>open_water_surface</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>parcel</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>eca</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type_shortname</structfield></term>
              <listitem><para>
                <type>character varying(5)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status_active</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_distributor</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_altitude_dtm</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view installation_view</title>
         <programlisting>
SELECT installation.id
, installation.name
, installation.identification
, installation.id_status
, installation.id_distributor
, installation.remarks
, installation.links
, installation.year
, installation.altitude_real
, installation.open_water_surface
, installation.parcel
, installation.eca
, installation.id_node
, installation.id_district
, installation.id_pressurezone
, installation.id_printmap
, installation._printmaps
, installation._districts
, installation._schema_view
, installation.geometry
, installation_type.name AS _type
, installation_type.shortname AS _type_shortname
, status.name AS _status
, status.active AS _status_active
, distributor.name AS _distributor
, node.altitude_dtm AS _altitude_dtm
, district.name AS _district
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (
           (
                 (
                       (
                             (distribution.installation 
                                JOIN distribution.installation_type 
                                  ON (
                                         (installation.id_type = installation_type.id)
                                   )
                             )
                          JOIN distribution.status 
                            ON (
                                   (installation.id_status = status.id)
                             )
                       )
               LEFT JOIN distribution.distributor 
                      ON (
                             (installation.id_distributor = distributor.id)
                       )
                 )
         LEFT JOIN distribution.node 
                ON (
                       (installation.id_node = node.id)
                 )
           )
   LEFT JOIN distribution.district 
          ON (
                 (installation.id_district = district.id)
           )
     )
LEFT JOIN distribution.pressurezone 
    ON (
           (installation.id_pressurezone = pressurezone.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.labelview"
               xreflabel="distribution.labelview">
        <title id="distribution.table.labelview-title">
         Table:
         
         <structname>labelview</structname>
        </title>
 

        <para>
          Table for editing label view mode.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>labelview</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(50)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing pipe via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.leak"
               xreflabel="distribution.leak">
        <title id="distribution.table.leak-title">
         Table:
         
         <structname>leak</structname>
        </title>
 

        <para>
          pipe leaks
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>leak</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pipe</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.leak-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_cause</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.leak-cause"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_damage</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.leak-damage"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>detection_date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>repair_date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_repaired</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>address</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pipe_replaced</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>description</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>repair</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on leak</title>

          <varlistentry>
            <term>fki_leak_id_cause</term>
            <listitem><para>id_cause</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_leak_id_damage</term>
            <listitem><para>id_damage</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_leak_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_leak_id_pipe</term>
            <listitem><para>id_pipe</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_leak_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_leak_id_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>leak_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.leak-cause"
               xreflabel="distribution.leak_cause">
        <title id="distribution.table.leak-cause-title">
         Table:
         
         <structname>leak_cause</structname>
        </title>
 

        <para>
          Causes of leak
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>leak_cause</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing leak via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.leak"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.leak-damage"
               xreflabel="distribution.leak_damage">
        <title id="distribution.table.leak-damage-title">
         Table:
         
         <structname>leak_damage</structname>
        </title>
 

        <para>
          Damages to leak
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>leak_damage</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing leak via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.leak"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.leak-type"
               xreflabel="distribution.leak_type">
        <title id="distribution.table.leak-type-title">
         Table:
         
         <structname>leak_type</structname>
        </title>
 

        <para>
          Types of leak
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>leak_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing leak via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.leak"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.leak-view"
               xreflabel="distribution.leak_view">
        <title id="distribution.view.leak-view-title">
         View:
         
         <structname>leak_view</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>leak_view</structname>
            </title>


            <varlistentry>
              <term><structfield>type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>cause</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>damage</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>detection_date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>repair_date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_repaired</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>address</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pipe_replaced</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>description</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>repair</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view leak_view</title>
         <programlisting>
SELECT leak_type.name AS type
, leak_cause.name AS cause
, leak_damage.name AS damage
, leak.detection_date
, leak.repair_date
, leak._repaired
, leak.address
, leak.pipe_replaced
, leak.description
, leak.repair
, leak.geometry 
FROM (
     (
           (distribution.leak 
              JOIN distribution.leak_type 
                ON (
                       (leak.id_type = leak_type.id)
                 )
           )
   LEFT JOIN distribution.leak_cause 
          ON (
                 (leak.id_cause = leak_cause.id)
           )
     )
  JOIN distribution.leak_damage 
    ON (
           (leak.id_damage = leak_damage.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.logged-actions"
               xreflabel="distribution.logged_actions">
        <title id="distribution.table.logged-actions-title">
         Table:
         
         <structname>logged_actions</structname>
        </title>
 

        <para>
          History of auditable actions on audited tables, from distribution.if_modified_func()
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>logged_actions</structname>
            </title>


            <varlistentry>
              <term><structfield>event_id</structfield></term>
              <listitem><para>
                <type>bigserial</type>


                <literal>PRIMARY KEY</literal>













              </para>

              <para>
                Unique identifier for each auditable event
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_name</structfield></term>
              <listitem><para>
                <type>text</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Database schema audited table for this event is in
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>table_name</structfield></term>
              <listitem><para>
                <type>text</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Non-schema-qualified table name of table event occured in
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>relid</structfield></term>
              <listitem><para>
                <type>oid</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Table OID. Changes with drop/create. Get with &apos;tablename&apos;::regclass
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>session_user_name</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

              <para>
                Login / session user whose statement caused the audited event
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>action_tstamp_tx</structfield></term>
              <listitem><para>
                <type>timestamp with time zone</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Transaction start timestamp for tx in which audited event occurred
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>action_tstamp_stm</structfield></term>
              <listitem><para>
                <type>timestamp with time zone</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Statement start timestamp for tx in which audited event occurred
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>action_tstamp_clk</structfield></term>
              <listitem><para>
                <type>timestamp with time zone</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Wall clock time at which audited event&apos;s trigger call occurred
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>transaction_id</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

              <para>
                Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>application_name</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

              <para>
                Application name set when this audit event occurred. Can be changed in-session by client.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>client_addr</structfield></term>
              <listitem><para>
                <type>inet</type>







              </para>

              <para>
                IP address of client that issued query. Null for unix domain socket.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>client_port</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

              <para>
                Remote peer IP port address of client that issued query. Undefined for unix socket.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>client_query</structfield></term>
              <listitem><para>
                <type>text</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Top-level query that caused this auditable event. May be more than one statement.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>action</structfield></term>
              <listitem><para>
                <type>text</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                Action type; I = insert, D = delete, U = update, T = truncate
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>row_data</structfield></term>
              <listitem><para>
                <type>hstore</type>







              </para>

              <para>
                Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>changed_fields</structfield></term>
              <listitem><para>
                <type>hstore</type>







              </para>

              <para>
                New values of fields changed by UPDATE. Null except for row-level UPDATE events.
              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>statement_only</structfield></term>
              <listitem><para>
                <type>boolean</type>



                <literal>NOT NULL</literal>





              </para>

              <para>
                &apos;t&apos; if audit event is from an FOR EACH STATEMENT trigger, &apos;f&apos; for FOR EACH ROW
              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on logged_actions</title>

          <varlistentry>
            <term>logged_actions_action_check</term>
            <listitem><para>CHECK ((action = ANY (ARRAY[&apos;I&apos;::text, &apos;D&apos;::text, &apos;U&apos;::text, &apos;T&apos;::text])))</para></listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on logged_actions</title>

          <varlistentry>
            <term>logged_actions_action_idx</term>
            <listitem><para>action</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>logged_actions_action_tstamp_tx_stm_idx</term>
            <listitem><para>action_tstamp_stm</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>logged_actions_relid_idx</term>
            <listitem><para>relid</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.node"
               xreflabel="distribution.node">
        <title id="distribution.table.node-title">
         Table:
         
         <structname>node</structname>
        </title>
 

        <para>
          Nodes. Type:If three pipe or more arrives at the node: three. If one pipe: one. If two: depends on characteristics of pipe: two_same (everything same), two_year (year is different), two_material (and year is/are different), two_diameter (and material/year are different). Orientation is calculated if two pipe arrives to place the symbol in theright direction.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>node</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_dtm</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>





                <literal>DEFAULT NULL::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_orientation</structfield></term>
              <listitem><para>
                <type>double precision</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status_active</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_under_object</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on node</title>

          <varlistentry>
            <term>node_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>





        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.node-control"
               xreflabel="distribution.node_control">
        <title id="distribution.view.node-control-title">
         View:
         
         <structname>node_control</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>node_control</structname>
            </title>


            <varlistentry>
              <term><structfield>problem</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>comment</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view node_control</title>
         <programlisting>
(
     (
           (
            SELECT&apos;Node with undefined type&apos;::text AS problem
                 , node.id
                 ,&apos;node id&apos;::text AS comment 
              FROM distribution.node 
             WHERE (node._type IS NULL)
             UNIONSELECT&apos;Node with no pipe/valve connected&apos;::text AS problem
                 , node.id
                 ,&apos;node id&apos;::text AS comment 
              FROM distribution.node 
             WHERE (
                       (NOT 
                             (node.id IN 
                                   (
                                    SELECT DISTINCT pipe.id_node_a 
                                      FROM distribution.pipe
                                   )
                             )
                       )
                     AND (NOT 
                             (node.id IN 
                                   (
                                    SELECT DISTINCT pipe.id_node_b 
                                      FROM distribution.pipe
                                   )
                             )
                       )
                 )
           )
       UNIONSELECT&apos;Too close node&apos;::text AS problem
           , a.id
           , (
                 (
                       (
                             (
                                   (&apos;Distance: &apos;::text || 
                                         (st_distance
                                               (a.geometry
                                                     , b.geometry
                                               )
                                         )::numeric
                                         (6
                                               ,4
                                         )
                                   ) || &apos;Position: &apos;::text
                             ) || st_x
                             (a.geometry)
                       ) || &apos; &apos;::text
                 ) || st_y
                 (a.geometry)
           ) AS comment 
        FROM distribution.node a
           , distribution.node b 
       WHERE (
                 (a.id &lt;&gt; b.id)
               AND st_dwithin
                 (a.geometry
                       , b.geometry
                       , (0.004)::double precision
                 )
           )
     )
 UNIONSELECT&apos;Pipes without node(s)&apos;::text AS problem
, pipe.id
,&apos;pipe id&apos;::text AS comment 
FROM distribution.pipe 
WHERE (
     (pipe.id_node_a IS NULL)
    OR (pipe.id_node_b IS NULL)
)
)     
UNION SELECT&apos;Non up-to-date altitudes&apos;::text AS problem
,      (count
(node.id)
)     ::integer AS id
,     &apos;number of node&apos;::text AS comment 
FROM   distribution.node 
WHERE  (node.altitude_dtm IS NULL)
ORDER BY 1;</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.pipe"
               xreflabel="distribution.pipe">
        <title id="distribution.table.pipe-title">
         Table:
         
         <structname>pipe</structname>
        </title>
 

        <para>
          Table for pipe. This should not be used for editing/viewing, as a more complete view (pipe_view) exists.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_parent</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe-function"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_install_method</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe-install-method"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_material</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe-material"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.distributor"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_precision</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.precision"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_protection</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe-protection"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.status"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview</structfield></term>
              <listitem><para>
                <type>integer</type>









                <literal>DEFAULT 2</literal>




                <literal>REFERENCES</literal> <xref linkend="distribution.table.labelview"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview_schema</structfield></term>
              <listitem><para>
                <type>integer</type>









                <literal>DEFAULT 2</literal>




                <literal>REFERENCES</literal> <xref linkend="distribution.table.labelview"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labeladdremark</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labeladdremark_schema</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pressure_nominal</structfield></term>
              <listitem><para>
                <type>smallint</type>





                <literal>DEFAULT 16</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>folder</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_force_view</structfield></term>
              <listitem><para>
                <type>boolean</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.visible"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_a</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.node"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_b</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.node"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_diff_elevation</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry_schematic</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>coating_internal_material_id</structfield></term>
              <listitem><para>
                <type>character(20)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>coating_external_material_id</structfield></term>
              <listitem><para>
                <type>character(20)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on pipe</title>

          <varlistentry>
            <term>pipe_year_check</term>
            <listitem><para>CHECK (((year &gt; 1800) AND (year &lt; 2100)))</para></listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on pipe</title>

          <varlistentry>
            <term>fki_pipe_id_distributor</term>
            <listitem><para>id_distributor</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_function</term>
            <listitem><para>id_function</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_install_method</term>
            <listitem><para>id_install_method</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_material</term>
            <listitem><para>id_material</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_node_a</term>
            <listitem><para>id_node_a</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_node_b</term>
            <listitem><para>id_node_b</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_parent</term>
            <listitem><para>id_parent</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_precision</term>
            <listitem><para>id_precision</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_protection</term>
            <listitem><para>id_protection</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_id_status</term>
            <listitem><para>id_status</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_labelview</term>
            <listitem><para>labelview</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_labelview_schema</term>
            <listitem><para>labelview_schema</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_pipe_schema_force_view</term>
            <listitem><para>schema_force_view</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>pipe_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>pipe_geoidx_sch</term>
            <listitem><para>geometry_schematic</para></listitem>
          </varlistentry>

        </variablelist>





        <itemizedlist>
          <title>
            Tables referencing leak via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.leak"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.subscriber"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.pipe-child-parent"
               xreflabel="distribution.pipe_child_parent">
        <title id="distribution.view.pipe-child-parent-title">
         View:
         
         <structname>pipe_child_parent</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_child_parent</structname>
            </title>


            <varlistentry>
              <term><structfield>child</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>parent</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_child_parent</title>
         <programlisting>
SELECT foo2.child
, foo2.parent
, (st_curvetoline
     (st_geomfromewkt
           (
                 (
                       (
                             (
                                   (
                                         (
                                               (
                                                     (
                                                           (
                                                                 (
                                                                       (
                                                                             (
                                                                                   (
                                                              &apos;SRID=21781;CIRCULARSTRING(&apos;::text || st_x
                                                                                               (foo2.start_point)
                                                                                         ) || &apos; &apos;::text
                                                                                   ) || st_y
                                                                                   (foo2.start_point)
                                                                             ) || 
                                                                           &apos;,&apos;::text
                                                                       ) || 
                                                                       (st_x
                                                                             (foo2.middle_point) + 
                                                                             (foo2.distance * cos
                                                                                   (foo2.azimuth)
                                                                             )
                                                                       )
                                                                 ) || &apos; &apos;::text
                                                           ) || 
                                                           (st_y
                                                                 (foo2.middle_point) + 
                                                                 (foo2.distance * sin
                                                                       (foo2.azimuth)
                                                                 )
                                                           )
                                                     ) || 
                                                   &apos;,&apos;::text
                                               ) || st_x
                                               (foo2.end_point)
                                         ) || &apos; &apos;::text
                                   ) || st_y
                                   (foo2.end_point)
                             ) || 
                     &apos;)&apos;::text
                 )
           )
           , 15
     )
)::geometry
(LineString
     ,21781
) AS geometry 
FROM (
SELECT foo.child
     , foo.parent
     , foo.start_point
     , foo.end_point
     , (
           (pi
                 () / 
                 (2)::double precision
           ) + st_azimuth
           (foo.start_point
                 , foo.end_point
           )
     ) AS azimuth
     , (
           (0.5)::double precision * st_distance
           (foo.start_point
                 , foo.end_point
           )
     ) AS distance
     , (st_line_interpolate_point
           (st_makeline
                 (foo.start_point
                       , foo.end_point
                 )
                 , (0.5)::double precision
           )
     )::geometry
     (Point
           ,21781
     ) AS middle_point 
  FROM (
      SELECT a.id AS child
           , b.id AS parent
           , (st_line_interpolate_point
                 (a.geometry
                       , (0.5)::double precision
                 )
           )::geometry
           (Point
                 ,21781
           ) AS start_point
           , st_closestpoint
           (st_makeline
                 (
                       (st_line_interpolate_point
                             (b.geometry
                                   , (LEAST
                                         (
                                               (1)::numeric
                                               , (
                                                     (
                                                           (4)::numeric / b._length2d
                                                     ) / 
                                                     (2)::numeric
                                               )
                                         )
                                   )::double precision
                             )
                       )::geometry
                       (Point
                             ,21781
                       )
                       , (st_line_interpolate_point
                             (b.geometry
                                   , (GREATEST
                                         (
                                               (0)::numeric
                                               , (
                                                     (1)::numeric - 
                                                     (
                                                           (
                                                                 (4)::numeric / b._length2d
                                                           ) / 
                                                           (2)::numeric
                                                     )
                                               )
                                         )
                                   )::double precision
                             )
                       )::geometry
                       (Point
                             ,21781
                       )
                 )
                 , a.geometry
           ) AS end_point 
        FROM (distribution.pipe a 
              JOIN distribution.pipe b 
                ON (
                       (a.id_parent = b.id)
                 )
           )
       WHERE (a.id_parent IS NOT NULL)
     ) foo
) foo2;</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.pipe-function"
               xreflabel="distribution.pipe_function">
        <title id="distribution.table.pipe-function-title">
         Table:
         
         <structname>pipe_function</structname>
        </title>
 

        <para>
          Function for pipe. Here is determined if pipe should be visible or not in the schematic view, but this can be overidden by the pipe attribute schema_force_view.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_function</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>



                <literal>NOT NULL</literal>



                <literal>DEFAULT true</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>code_sire</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing pipe via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.pipe-install-method"
               xreflabel="distribution.pipe_install_method">
        <title id="distribution.table.pipe-install-method-title">
         Table:
         
         <structname>pipe_install_method</structname>
        </title>
 

        <para>
          Installation methods.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_install_method</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing pipe via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.pipe-material"
               xreflabel="distribution.pipe_material">
        <title id="distribution.table.pipe-material-title">
         Table:
         
         <structname>pipe_material</structname>
        </title>
 

        <para>
          List of materials for pipe. All the possible combinations material/diameter are listed in this table. _fancy_name is automatically generated by rules on insert and update. It is meant to be used in QGIS for the combo box of pipe.id_material
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_material</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(8)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>diameter</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>diameter_internal</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>diameter_external</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_fancyname</structfield></term>
              <listitem><para>
                <type>character varying(18)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>code_sire</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing pipe via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.pipe-protection"
               xreflabel="distribution.pipe_protection">
        <title id="distribution.table.pipe-protection-title">
         Table:
         
         <structname>pipe_protection</structname>
        </title>
 

        <para>
          Pipes prtoection details.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_protection</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing pipe via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.pipe-schema"
               xreflabel="distribution.pipe_schema">
        <title id="distribution.view.pipe-schema-title">
         View:
         
         <structname>pipe_schema</structname>
        </title>
 

        <para>
          Final view for schema
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_install_method</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_material</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_precision</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_protection</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview_schema</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pressure_nominal</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>folder</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>number_of_pipe</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_schema</title>
         <programlisting>
SELECT pipe.id
, pipe.id_function
, pipe.id_install_method
, pipe.id_material
, pipe.id_distributor
, pipe.id_precision
, pipe.id_protection
, pipe.id_status
, pipe.id_pressurezone
, pipe.labelview
, pipe.labelview_schema
, pipe.year
, pipe.pressure_nominal
, pipe.folder
, pipe.remarks
, pipe.id_printmap
, pipe._printmaps
, pipe.id_district
, pipe._districts
, pipe_schema_merged._length2d
, pipe_schema_merged._length3d
, pipe_schema_merged.number_of_pipe
, pipe_schema_merged.tunnel_or_bridge
, pipe_schema_merged._valve_count
, pipe_schema_merged._valve_closed
, pipe_schema_merged.geometry 
FROM (distribution.pipe_schema_merged 
  JOIN distribution.pipe 
    ON (
           (pipe.id = pipe_schema_merged.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.view.pipe-schema-error"
               xreflabel="distribution.pipe_schema_error">
        <title id="distribution.view.pipe-schema-error-title">
         View:
         
         <structname>pipe_schema_error</structname>
        </title>
 

        <para>
          Report IDs of parent pipe where pipe concatenation leads to a MultiLineString and not to a LineString.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema_error</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_schema_error</title>
         <programlisting>
SELECT foo.id 
FROM (
SELECT pipe_schema_items.groupid AS id
     , (st_multi
           (st_linemerge
                 (st_union
                       (pipe_schema_items.geometry)
                 )
           )
     )::geometry
     (MultiLineString
           ,21781
     ) AS geometry 
  FROM distribution.pipe_schema_items 
GROUP BY pipe_schema_items.groupid
) foo 
WHERE (geometrytype
     (st_collectionhomogenize
           (foo.geometry)
     ) &lt;&gt; &apos;LINESTRING&apos;::text
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.view.pipe-schema-items"
               xreflabel="distribution.pipe_schema_items">
        <title id="distribution.view.pipe-schema-items-title">
         View:
         
         <structname>pipe_schema_items</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema_items</structname>
            </title>


            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>groupid</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_schema_items</title>
         <programlisting>
SELECT pipe_schema_viewableitems.geometry
, distribution.get_parent
(pipe_schema_viewableitems.id
     , pipe_schema_viewableitems.id_parent
) AS groupid
, pipe_schema_viewableitems._length2d
, pipe_schema_viewableitems._length3d
, pipe_schema_viewableitems.tunnel_or_bridge
, pipe_schema_viewableitems._valve_count
, pipe_schema_viewableitems._valve_closed 
FROM distribution.pipe_schema_viewableitems;</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.view.pipe-schema-merged"
               xreflabel="distribution.pipe_schema_merged">
        <title id="distribution.view.pipe-schema-merged-title">
         View:
         
         <structname>pipe_schema_merged</structname>
        </title>
 

        <para>
          Merging of pipe based on the group ID
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema_merged</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>number_of_pipe</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_schema_merged</title>
         <programlisting>
SELECT pipe_schema_items.groupid AS id
, (st_linemerge
     (st_union
           (pipe_schema_items.geometry)
     )
)::geometry
(LineString
     ,21781
) AS geometry
, count
(pipe_schema_items.groupid) AS number_of_pipe
, sum
(pipe_schema_items._length2d) AS _length2d
, sum
(pipe_schema_items._length3d) AS _length3d
, bool_or
(pipe_schema_items.tunnel_or_bridge) AS tunnel_or_bridge
, sum
(pipe_schema_items._valve_count) AS _valve_count
, bool_or
(pipe_schema_items._valve_closed) AS _valve_closed 
FROM distribution.pipe_schema_items 
GROUP BY pipe_schema_items.groupid;</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.view.pipe-schema-node"
               xreflabel="distribution.pipe_schema_node">
        <title id="distribution.view.pipe-schema-node-title">
         View:
         
         <structname>pipe_schema_node</structname>
        </title>
 

        <para>
          Final view for schema completed with node.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema_node</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_install_method</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_material</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_precision</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_protection</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview_schema</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pressure_nominal</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>folder</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>number_of_pipe</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_a</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_b</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_diff_elevation</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_slope</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_schema_node</title>
         <programlisting>
SELECT foo.id
, foo.id_function
, foo.id_install_method
, foo.id_material
, foo.id_distributor
, foo.id_precision
, foo.id_protection
, foo.id_status
, foo.id_pressurezone
, foo.labelview
, foo.labelview_schema
, foo.year
, foo.pressure_nominal
, foo.folder
, foo.remarks
, foo.id_printmap
, foo._printmaps
, foo.id_district
, foo._districts
, foo._length2d
, foo._length3d
, foo.number_of_pipe
, foo.tunnel_or_bridge
, foo._valve_count
, foo._valve_closed
, foo.geometry
, foo.id_node_a
, foo.id_node_b
, CASE WHEN 
(foo.tunnel_or_bridge IS TRUE) THEN NULL::numeric ELSE abs
(
     (node_a.altitude_dtm - node_b.altitude_dtm)
) END AS _diff_elevation
, CASE WHEN 
(foo.tunnel_or_bridge IS TRUE) THEN NULL::numeric ELSE 
(abs
     (
           (node_a.altitude_dtm - node_b.altitude_dtm)
     ) / foo._length3d
) END AS _slope 
FROM (
     (
           (
            SELECT pipe_schema.id
                 , pipe_schema.id_function
                 , pipe_schema.id_install_method
                 , pipe_schema.id_material
                 , pipe_schema.id_distributor
                 , pipe_schema.id_precision
                 , pipe_schema.id_protection
                 , pipe_schema.id_status
                 , pipe_schema.id_pressurezone
                 , pipe_schema.labelview
                 , pipe_schema.labelview_schema
                 , pipe_schema.year
                 , pipe_schema.pressure_nominal
                 , pipe_schema.folder
                 , pipe_schema.remarks
                 , pipe_schema.id_printmap
                 , pipe_schema._printmaps
                 , pipe_schema.id_district
                 , pipe_schema._districts
                 , pipe_schema._length2d
                 , pipe_schema._length3d
                 , pipe_schema.number_of_pipe
                 , pipe_schema.tunnel_or_bridge
                 , pipe_schema._valve_count
                 , pipe_schema._valve_closed
                 , pipe_schema.geometry
                 , distribution.node_get_id
                 (st_startpoint
                       (pipe_schema.geometry)
                       , true
                 ) AS id_node_a
                 , distribution.node_get_id
                 (st_endpoint
                       (pipe_schema.geometry)
                       , true
                 ) AS id_node_b 
              FROM distribution.pipe_schema
           ) foo 
   LEFT JOIN distribution.node node_a 
          ON (
                 (foo.id_node_a = node_a.id)
           )
     )
LEFT JOIN distribution.node node_b 
    ON (
           (foo.id_node_b = node_b.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.pipe-schema-temp"
               xreflabel="distribution.pipe_schema_temp">
        <title id="distribution.table.pipe-schema-temp-title">
         Table:
         
         <structname>pipe_schema_temp</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema_temp</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_install_method</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_material</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_precision</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_protection</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview_schema</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pressure_nominal</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>folder</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>number_of_pipe</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>bigint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_a</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_b</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_diff_elevation</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_slope</structfield></term>
              <listitem><para>
                <type>numeric</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>










      </para>
    </section>

      <section id="distribution.view.pipe-schema-viewableitems"
               xreflabel="distribution.pipe_schema_viewableitems">
        <title id="distribution.view.pipe-schema-viewableitems-title">
         View:
         
         <structname>pipe_schema_viewableitems</structname>
        </title>
 

        <para>
          viewable pipe in the schematic view (before merge)
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_schema_viewableitems</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_parent</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_schema_viewableitems</title>
         <programlisting>
SELECT pipe.id
, pipe.id_parent
, pipe._length2d
, pipe._length3d
, pipe.tunnel_or_bridge
, pipe.geometry_schematic AS geometry
, pipe._valve_count
, pipe._valve_closed 
FROM (distribution.pipe 
  JOIN distribution.status 
    ON (
           (pipe.id_status = status.id)
     )
)
WHERE (
     (pipe._schema_view IS TRUE)
   AND (status.active IS TRUE)
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.view.pipe-view"
               xreflabel="distribution.pipe_view">
        <title id="distribution.view.pipe-view-title">
         View:
         
         <structname>pipe_view</structname>
        </title>
 

        <para>
          View for pipe. This view is not editable
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pipe_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_parent</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_install_method</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_material</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_distributor</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_precision</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_protection</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_force_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>tunnel_or_bridge</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>pressure_nominal</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>folder</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_count</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_valve_closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_a</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node_b</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length2d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_length3d</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_diff_elevation</structfield></term>
              <listitem><para>
                <type>numeric(8,2)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_function_name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_function_code_sire</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_install_method</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_material_name</structfield></term>
              <listitem><para>
                <type>character varying(18)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_material_longname</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_material_diameter</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_material_diameter_internal</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_material_code_sire</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_distributor</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_precision</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_protection</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status_name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_status_active</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pipe_view</title>
         <programlisting>
SELECT pipe.id
, pipe.id_parent
, pipe.id_function
, pipe.id_install_method
, pipe.id_material
, pipe.id_distributor
, pipe.id_precision
, pipe.id_protection
, pipe.id_status
, pipe.schema_force_view
, pipe.year
, pipe.tunnel_or_bridge
, pipe.pressure_nominal
, pipe.folder
, pipe.remarks
, pipe._valve_count
, pipe._valve_closed
, pipe._schema_view
, pipe.id_node_a
, pipe.id_node_b
, pipe.id_district
, pipe.id_pressurezone
, pipe.id_printmap
, pipe._length2d
, pipe._length3d
, pipe._diff_elevation
, pipe._printmaps
, pipe._districts
, pipe.geometry
, pipe_function.name AS _function_name
, pipe_function.code_sire AS _function_code_sire
, pipe_install_method.name AS _install_method
, pipe_material._fancyname AS _material_name
, pipe_material.name AS _material_longname
, pipe_material.diameter AS _material_diameter
, pipe_material.diameter_internal AS _material_diameter_internal
, pipe_material.code_sire AS _material_code_sire
, distributor.name AS _distributor
,&quot;precision&quot;.name AS _precision
, pipe_protection.name AS _protection
, status.name AS _status_name
, status.active AS _status_active
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (
           (
                 (
                       (
                             (
                                   (
                                         (
                                               (
                                                     (distribution.pipe 
                                                        JOIN distribution.pipe_function 
                                                          ON (
                                                                 (pipe.id_function = pipe_function.id)
                                                           )
                                                     )
                                                  JOIN distribution.pipe_install_method 
                                                    ON (
                                                           (pipe.id_install_method = pipe_install_method.id)
                                                     )
                                               )
                                            JOIN distribution.pipe_material 
                                              ON (
                                                     (pipe.id_material = pipe_material.id)
                                               )
                                         )
                                      JOIN distribution.distributor 
                                        ON (
                                               (pipe.id_distributor = distributor.id)
                                         )
                                   )
                                JOIN distribution.&quot;precision&quot;
                                  ON (
                                         (pipe.id_precision = &quot;precision&quot;.id)
                                   )
                             )
                     LEFT JOIN distribution.pipe_protection 
                            ON (
                                   (pipe.id_protection = pipe_protection.id)
                             )
                       )
                    JOIN distribution.status 
                      ON (
                             (pipe.id_status = status.id)
                       )
                 )
         LEFT JOIN distribution.pressurezone 
                ON (
                       (pipe.id_pressurezone = pressurezone.id)
                 )
           )
   LEFT JOIN distribution.node node_a 
          ON (
                 (pipe.id_node_a = node_a.id)
           )
     )
LEFT JOIN distribution.node node_b 
    ON (
           (pipe.id_node_b = node_b.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.precision"
               xreflabel="distribution.precision">
        <title id="distribution.table.precision-title">
         Table:
         
         <structname>precision</structname>
        </title>
 

        <para>
          pressure &quot;precision&quot;.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>precision</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing pipe via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.pressurezone"
               xreflabel="distribution.pressurezone">
        <title id="distribution.table.pressurezone-title">
         Table:
         
         <structname>pressurezone</structname>
        </title>
 

        <para>
          Pressure zones.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>pressurezone</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_parent</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(MultiPolygon,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on pressurezone</title>

          <varlistentry>
            <term>fki_pressurezone_id_parent</term>
            <listitem><para>id_parent</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>pressurezone_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>





        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.leak"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pressurezone"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.samplingpoint"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.subscriber"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.pressurezone-child-parent"
               xreflabel="distribution.pressurezone_child_parent">
        <title id="distribution.view.pressurezone-child-parent-title">
         View:
         
         <structname>pressurezone_child_parent</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>pressurezone_child_parent</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>child</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>parent</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view pressurezone_child_parent</title>
         <programlisting>
SELECT a.id
, a.name AS child
, b.name AS parent
, (st_makeline
     (st_centroid
           (a.geometry)
           , st_centroid
           (b.geometry)
     )
)::geometry
(LineString
     ,21781
) AS geometry 
FROM (distribution.pressurezone a 
  JOIN distribution.pressurezone b 
    ON (
           (a.id_parent = b.id)
     )
)
WHERE (a.id_parent IS NOT NULL);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.printmap"
               xreflabel="distribution.printmap">
        <title id="distribution.table.printmap-title">
         Table:
         
         <structname>printmap</structname>
        </title>
 

        <para>
          This table is used for polygons for predefined printable maps. shortname would be used as label string, and long_mame would be used in the print composer.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>printmap</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(20)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Polygon,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>version_date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>smallint</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on printmap</title>

          <varlistentry>
            <term>fki_printmap_id_district</term>
            <listitem><para>id</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>printmap_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.protectionzone"
               xreflabel="distribution.protectionzone">
        <title id="distribution.table.protectionzone-title">
         Table:
         
         <structname>protectionzone</structname>
        </title>
 

        <para>
          protectionzones.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>protectionzone</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.protectionzone-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>validated</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT true</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>agent</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(MultiPolygon,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on protectionzone</title>

          <varlistentry>
            <term>fki_protectionzone_id_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>protectionzone_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.protectionzone-type"
               xreflabel="distribution.protectionzone_type">
        <title id="distribution.table.protectionzone-type-title">
         Table:
         
         <structname>protectionzone_type</structname>
        </title>
 

        <para>
          type for hydrant.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>protectionzone_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(50)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing protectionzone via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.protectionzone"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.protectionzone-view"
               xreflabel="distribution.protectionzone_view">
        <title id="distribution.view.protectionzone-view-title">
         View:
         
         <structname>protectionzone_view</structname>
        </title>
 

        <para>
          View for protectionzone. This view is editable (a rule exists to forward changes to the table).
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>protectionzone_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>validated</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>date</structfield></term>
              <listitem><para>
                <type>date</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>agent</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(MultiPolygon,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type_long</structfield></term>
              <listitem><para>
                <type>character varying(50)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view protectionzone_view</title>
         <programlisting>
SELECT protectionzone.id
, protectionzone.id_type
, protectionzone.name
, protectionzone.validated
, protectionzone.date
, protectionzone.agent
, protectionzone.geometry
, protectionzone_type.shortname AS _type
, protectionzone_type.name AS _type_long 
FROM (distribution.protectionzone 
  JOIN distribution.protectionzone_type 
    ON (
           (protectionzone.id_type = protectionzone_type.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.remote-type"
               xreflabel="distribution.remote_type">
        <title id="distribution.table.remote-type-title">
         Table:
         
         <structname>remote_type</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>remote_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remote</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>





                <literal>DEFAULT &apos;&apos;::character varying</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.samplingpoint"
               xreflabel="distribution.samplingpoint">
        <title id="distribution.table.samplingpoint-title">
         Table:
         
         <structname>samplingpoint</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>samplingpoint</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>



                <literal>NOT NULL</literal>





              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on samplingpoint</title>

          <varlistentry>
            <term>fki_samplingpoint_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_samplingpoint_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>samplingpoint_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.view.samplingpoint-view"
               xreflabel="distribution.samplingpoint_view">
        <title id="distribution.view.samplingpoint-view-title">
         View:
         
         <structname>samplingpoint_view</structname>
        </title>
 

        <para>
          View for samplingpoint. This view is editable (a rule exists to forwad changes to the table).
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>samplingpoint_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view samplingpoint_view</title>
         <programlisting>
SELECT samplingpoint.id
, samplingpoint.identification
, samplingpoint.id_district
, samplingpoint.id_printmap
, samplingpoint.id_pressurezone
, samplingpoint._printmaps
, samplingpoint._districts
, samplingpoint.remarks
, samplingpoint.geometry
, district.name AS _district
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (distribution.samplingpoint 
   LEFT JOIN distribution.district 
          ON (
                 (samplingpoint.id_district = district.id)
           )
     )
LEFT JOIN distribution.pressurezone 
    ON (
           (samplingpoint.id_pressurezone = pressurezone.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.view.search-view"
               xreflabel="distribution.search_view">
        <title id="distribution.view.search-view-title">
         View:
         
         <structname>search_view</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>search_view</structname>
            </title>


            <varlistentry>
              <term><structfield>layer_name</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>search_text</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view search_view</title>
         <programlisting>
(
     (
      SELECT&apos;Ouvrage&apos;::text AS layer_name
           , (
                 (
                       (installation_view._type)::text || &apos; &apos;::text
                 ) || 
                 (installation_view.name)::text
           ) AS search_text
           , installation_view.geometry 
        FROM distribution.installation_view 
       WHERE (installation_view._status_active IS TRUE)
       UNIONSELECT&apos;Hydrantes&apos;::text AS layer_name
           , (
                 (
                       (hydrant_view._district)::text || &apos; &apos;::text
                 ) || 
                 (hydrant_view.identification)::text
           ) AS search_text
           , hydrant_view.geometry 
        FROM distribution.hydrant_view 
       WHERE (hydrant_view._status_active IS TRUE)
     )
 UNIONSELECT&apos;Abonnés&apos;::text AS layer_name
     , (
           (
                 (subscriber_view._type)::text || &apos; &apos;::text
           ) || 
           (subscriber_view._client_identification_full)::text
     ) AS search_text
     , subscriber_view.geometry 
  FROM distribution.subscriber_view
)
UNIONSELECT&apos;Vannes&apos;::text AS layer_name
, (
     (
           (valve_view._function)::text || &apos; &apos;::text
     ) || valve_view.identification
) AS search_text
, valve_view.geometry 
FROM distribution.valve_view 
WHERE (valve_view.identification IS NOT NULL);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.status"
               xreflabel="distribution.status">
        <title id="distribution.table.status-title">
         Table:
         
         <structname>status</structname>
        </title>
 

        <para>
          Status table, with SIRE id.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>status</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>active</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT true</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>sire</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>comment</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing hydrant via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.hydrant"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.subscriber"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.subscriber"
               xreflabel="distribution.subscriber">
        <title id="distribution.table.subscriber-title">
         Table:
         
         <structname>subscriber</structname>
        </title>
 

        <para>
          Table for subscriber. This should not be used for editing/viewing, as a more complete view (subscriber_view) exists.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>subscriber</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.subscriber-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_status</structfield></term>
              <listitem><para>
                <type>integer</type>









                <literal>DEFAULT 1</literal>




                <literal>REFERENCES</literal> <xref linkend="distribution.table.status"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pipe</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>client_identification</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_client_identification_full</structfield></term>
              <listitem><para>
                <type>character varying(16)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>parcel</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on subscriber</title>

          <varlistentry>
            <term>fki_id_pipe</term>
            <listitem><para>id_pipe</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_id_status</term>
            <listitem><para>id_status</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_id_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_subscriber_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_subscriber_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>subscriber_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.view.subscriber-pipe-relation"
               xreflabel="distribution.subscriber_pipe_relation">
        <title id="distribution.view.subscriber-pipe-relation-title">
         View:
         
         <structname>subscriber_pipe_relation</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>subscriber_pipe_relation</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_client_identification_full</structfield></term>
              <listitem><para>
                <type>character varying(16)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(LineString,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view subscriber_pipe_relation</title>
         <programlisting>
SELECT a.id
, a._client_identification_full
, (st_makeline
     (a.geometry
           , st_line_interpolate_point
           (b.geometry
                 , (0.5)::double precision
           )
     )
)::geometry
(LineString
     ,21781
) AS geometry 
FROM (distribution.subscriber a 
  JOIN distribution.pipe b 
    ON (
           (a.id_pipe = b.id)
     )
)
WHERE (a.id_pipe IS NOT NULL);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.subscriber-type"
               xreflabel="distribution.subscriber_type">
        <title id="distribution.table.subscriber-type-title">
         Table:
         
         <structname>subscriber_type</structname>
        </title>
 

        <para>
          type for subscriber.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>subscriber_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing subscriber via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.subscriber"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.subscriber-view"
               xreflabel="distribution.subscriber_view">
        <title id="distribution.view.subscriber-view-title">
         View:
         
         <structname>subscriber_view</structname>
        </title>
 

        <para>
          View for subscriber. This view is editable (a rule exists to forward changes to the table).
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>subscriber_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pipe</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>client_identification</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_client_identification_full</structfield></term>
              <listitem><para>
                <type>character varying(16)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>parcel</structfield></term>
              <listitem><para>
                <type>character varying(12)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view subscriber_view</title>
         <programlisting>
SELECT subscriber.id
, subscriber.id_type
, subscriber.id_pipe
, subscriber.client_identification
, subscriber._client_identification_full
, subscriber.parcel
, subscriber.id_district
, subscriber.id_pressurezone
, subscriber.id_printmap
, subscriber._printmaps
, subscriber._districts
, subscriber.geometry
, subscriber_type.name AS _type
, district.name AS _district
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (
           (distribution.subscriber 
              JOIN distribution.subscriber_type 
                ON (
                       (subscriber.id_type = subscriber_type.id)
                 )
           )
   LEFT JOIN distribution.district 
          ON (
                 (subscriber.id_district = district.id)
           )
     )
LEFT JOIN distribution.pressurezone 
    ON (
           (subscriber.id_pressurezone = pressurezone.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.valve"
               xreflabel="distribution.valve">
        <title id="distribution.table.valve-title">
         Table:
         
         <structname>valve</structname>
        </title>
 

        <para>
          Table for valve.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>valve</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.valve-type"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.valve-function"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_maintenance</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>diameter_nominal</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>closed</structfield></term>
              <listitem><para>
                <type>boolean</type>





                <literal>DEFAULT false</literal>



              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview</structfield></term>
              <listitem><para>
                <type>integer</type>









                <literal>DEFAULT 2</literal>




                <literal>REFERENCES</literal> <xref linkend="distribution.table.labelview"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>labelview_schema</structfield></term>
              <listitem><para>
                <type>integer</type>









                <literal>DEFAULT 2</literal>




                <literal>REFERENCES</literal> <xref linkend="distribution.table.labelview"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_force_view</structfield></term>
              <listitem><para>
                <type>boolean</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.visible"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.node"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.district"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pressurezone"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pipe</structfield></term>
              <listitem><para>
                <type>integer</type>












                <literal>REFERENCES</literal> <xref linkend="distribution.table.pipe"/>


              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry_schematic</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on valve</title>

          <varlistentry>
            <term>valve_year_check</term>
            <listitem><para>CHECK (((year &gt; 1800) AND (year &lt; 2100)))</para></listitem>
          </varlistentry>

        </variablelist>





        <variablelist>
          <title>Indexes on valve</title>

          <varlistentry>
            <term>fki_valve_id_district</term>
            <listitem><para>id_district</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_id_function</term>
            <listitem><para>id_function</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_id_node</term>
            <listitem><para>id_node</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_id_pipe</term>
            <listitem><para>id_pipe</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_id_pressurezone</term>
            <listitem><para>id_pressurezone</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_id_type</term>
            <listitem><para>id_type</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_labelview</term>
            <listitem><para>labelview</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_labelview_schema</term>
            <listitem><para>labelview_schema</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>fki_valve_schema_force_view</term>
            <listitem><para>schema_force_view</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>valve_geoidx</term>
            <listitem><para>geometry</para></listitem>
          </varlistentry>



          <varlistentry>
            <term>valve_geoidx_sch</term>
            <listitem><para>geometry_schematic</para></listitem>
          </varlistentry>

        </variablelist>








      </para>
    </section>

      <section id="distribution.table.valve-function"
               xreflabel="distribution.valve_function">
        <title id="distribution.table.valve-function-title">
         Table:
         
         <structname>valve_function</structname>
        </title>
 

        <para>
          Types of valve
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>valve_function</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>shortname</structfield></term>
              <listitem><para>
                <type>character varying(5)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>



                <literal>NOT NULL</literal>



                <literal>DEFAULT true</literal>



              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing valve via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.table.valve-maintenance"
               xreflabel="distribution.valve_maintenance">
        <title id="distribution.table.valve-maintenance-title">
         Table:
         
         <structname>valve_maintenance</structname>
        </title>
 

        <para>
          valve_maintenance table.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>valve_maintenance</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(35)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>priority</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>comment</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>



        <variablelist>
          <title>Constraints on valve_maintenance</title>

          <varlistentry>
            <term>valve_maintenance_priority_check</term>
            <listitem><para>CHECK (((priority &gt; 0) AND (priority &lt; 4)))</para></listitem>
          </varlistentry>

        </variablelist>










      </para>
    </section>

      <section id="distribution.view.valve-schema"
               xreflabel="distribution.valve_schema">
        <title id="distribution.view.valve-schema-title">
         View:
         
         <structname>valve_schema</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>valve_schema</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pipe</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_maintenance</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>diameter_nominal</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_force_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_function</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_function_shortname</structfield></term>
              <listitem><para>
                <type>character varying(5)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_label</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_altitude_dtm</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view valve_schema</title>
         <programlisting>
SELECT valve.id
, valve.identification
, valve.id_type
, valve.id_function
, valve.id_pipe
, valve.id_maintenance
, valve.diameter_nominal
, valve.year
, valve.closed
, valve.altitude_real
, valve.remarks
, valve.schema_force_view
, valve.id_node
, valve.id_district
, valve.id_pressurezone
, valve._districts
, valve._printmaps
, valve.geometry_schematic AS geometry
, valve_function.name AS _function
, valve_function.shortname AS _function_shortname
, valve_type.type AS _type
, CASE WHEN 
(valve_function.shortname IS NULL) THEN 
(
     (valve.identification)::character varying
)::text ELSE 
(
     (valve_function.shortname)::text || 
     (
           (valve.identification)::character varying
     )::text
) END AS _label
, node.altitude_dtm AS _altitude_dtm
, district.name AS _district
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (
           (
                 (
                       (distribution.valve 
                          JOIN distribution.valve_type 
                            ON (
                                   (valve.id_function = valve_type.id)
                             )
                       )
                    JOIN distribution.valve_function 
                      ON (
                             (valve.id_function = valve_function.id)
                       )
                 )
         LEFT JOIN distribution.node 
                ON (
                       (valve.id_node = node.id)
                 )
           )
   LEFT JOIN distribution.district 
          ON (
                 (valve.id_district = district.id)
           )
     )
LEFT JOIN distribution.pressurezone 
    ON (
           (valve.id_pressurezone = pressurezone.id)
     )
)
WHERE (valve._schema_view IS TRUE);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.valve-type"
               xreflabel="distribution.valve_type">
        <title id="distribution.table.valve-type-title">
         Table:
         
         <structname>valve_type</structname>
        </title>
 

        <para>
          Types of valve
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>valve_type</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing valve via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>

      <section id="distribution.view.valve-view"
               xreflabel="distribution.valve_view">
        <title id="distribution.view.valve-view-title">
         View:
         
         <structname>valve_view</structname>
        </title>
 


        <para>
          <variablelist>
            <title>
              Structure of <structname>valve_view</structname>
            </title>


            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>identification</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_type</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_function</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_maintenance</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pipe</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>diameter_nominal</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>year</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>closed</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>altitude_real</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>remarks</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>schema_force_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_node</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_district</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_pressurezone</structfield></term>
              <listitem><para>
                <type>integer</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id_printmap</structfield></term>
              <listitem><para>
                <type>integer[]</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_printmaps</structfield></term>
              <listitem><para>
                <type>character varying(100)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_districts</structfield></term>
              <listitem><para>
                <type>character varying(255)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_schema_view</structfield></term>
              <listitem><para>
                <type>boolean</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>geometry</structfield></term>
              <listitem><para>
                <type>geometry(Point,21781)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_function</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_function_shortname</structfield></term>
              <listitem><para>
                <type>character varying(5)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_type</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_label</structfield></term>
              <listitem><para>
                <type>text</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_altitude_dtm</structfield></term>
              <listitem><para>
                <type>numeric(10,3)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_district</structfield></term>
              <listitem><para>
                <type>character varying(40)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone</structfield></term>
              <listitem><para>
                <type>character varying(30)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_shortname</structfield></term>
              <listitem><para>
                <type>character varying(10)</type>







              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>_pressurezone_colorcode</structfield></term>
              <listitem><para>
                <type>smallint</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>








        <figure>
         <title>Definition of view valve_view</title>
         <programlisting>
SELECT valve.id
, valve.identification
, valve.id_type
, valve.id_function
, valve.id_maintenance
, valve.id_pipe
, valve.diameter_nominal
, valve.year
, valve.closed
, valve.altitude_real
, valve.remarks
, valve.schema_force_view
, valve.id_node
, valve.id_district
, valve.id_pressurezone
, valve.id_printmap
, valve._printmaps
, valve._districts
, valve._schema_view
, valve.geometry
, valve_function.name AS _function
, valve_function.shortname AS _function_shortname
, valve_type.type AS _type
, CASE WHEN 
(valve_function.shortname IS NULL) THEN 
(
     (valve.identification)::character varying
)::text ELSE 
(
     (valve_function.shortname)::text || 
     (
           (valve.identification)::character varying
     )::text
) END AS _label
, node.altitude_dtm AS _altitude_dtm
, district.name AS _district
, pressurezone.name AS _pressurezone
, pressurezone.shortname AS _pressurezone_shortname
, pressurezone.colorcode AS _pressurezone_colorcode 
FROM (
     (
           (
                 (
                       (distribution.valve 
                          JOIN distribution.valve_type 
                            ON (
                                   (valve.id_type = valve_type.id)
                             )
                       )
                    JOIN distribution.valve_function 
                      ON (
                             (valve.id_function = valve_function.id)
                       )
                 )
         LEFT JOIN distribution.node 
                ON (
                       (valve.id_node = node.id)
                 )
           )
   LEFT JOIN distribution.district 
          ON (
                 (valve.id_district = district.id)
           )
     )
LEFT JOIN distribution.pressurezone 
    ON (
           (valve.id_pressurezone = pressurezone.id)
     )
);</programlisting>
        </figure>



      </para>
    </section>

      <section id="distribution.table.visible"
               xreflabel="distribution.visible">
        <title id="distribution.table.visible-title">
         Table:
         
         <structname>visible</structname>
        </title>
 

        <para>
          Table for editing in qgis tri state boolean (NULL/True/False) by using value relation.
        </para>


        <para>
          <variablelist>
            <title>
              Structure of <structname>visible</structname>
            </title>


            <varlistentry>
              <term><structfield>x</structfield></term>
              <listitem><para>
                <type>serial</type>


                <literal>PRIMARY KEY</literal>













              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>id</structfield></term>
              <listitem><para>
                <type>boolean</type>




                      <literal>UNIQUE</literal>










              </para>

            </listitem>
          </varlistentry>

            <varlistentry>
              <term><structfield>name</structfield></term>
              <listitem><para>
                <type>character varying(50)</type>







              </para>

            </listitem>
          </varlistentry>

        </variablelist>







        <itemizedlist>
          <title>
            Tables referencing installation via Foreign Key Constraints
          </title>

          <listitem>
            <para>
              <xref linkend="distribution.table.installation"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.pipe"/>
            </para>
          </listitem>



          <listitem>
            <para>
              <xref linkend="distribution.table.valve"/>
            </para>
          </listitem>

        </itemizedlist>






      </para>
    </section>



<!-- Function audit_table(audit_query_text regclass, audit_rows boolean, target_table boolean) -->
    <section id="distribution.function.audit-table-audit-query-text-regclass-audit-rows-boolean-target-table-boolean"
             xreflabel="distributionaudit_table(audit_query_text regclass, audit_rows boolean, target_table boolean)">
      <title id="distribution.function.audit-table-audit-query-text-regclass-audit-rows-boolean-target-table-boolean-title">
       audit_table(audit_query_text regclass, audit_rows boolean, target_table boolean)
      </title>
      <titleabbrev id="distribution.function.audit-table-audit-query-text-regclass-audit-rows-boolean-target-table-boolean-titleabbrev">
       audit_table(audit_query_text regclass, audit_rows boolean, target_table boolean)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>SQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
SELECT distribution.audit_table($1, $2, $3, ARRAY[]::text[]);
</programlisting>
      </para>
    </section>

<!-- Function audit_table(ignored_cols regclass, audit_query_text boolean, audit_rows boolean, target_table text[]) -->
    <section id="distribution.function.audit-table-ignored-cols-regclass-audit-query-text-boolean-audit-rows-boolean-target-table-textARRAY"
             xreflabel="distributionaudit_table(ignored_cols regclass, audit_query_text boolean, audit_rows boolean, target_table text[])">
      <title id="distribution.function.audit-table-ignored-cols-regclass-audit-query-text-boolean-audit-rows-boolean-target-table-textARRAY-title">
       audit_table(ignored_cols regclass, audit_query_text boolean, audit_rows boolean, target_table text[])
      </title>
      <titleabbrev id="distribution.function.audit-table-ignored-cols-regclass-audit-query-text-boolean-audit-rows-boolean-target-table-textARRAY-titleabbrev">
       audit_table(ignored_cols regclass, audit_query_text boolean, audit_rows boolean, target_table text[])
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       
ADD auditing support TO a TABLE.
 
Arguments:
   target_table:     TABLE name, schema qualified IF NOT ON search_path
   audit_rows:       Record each row CHANGE, OR only audit at a statement level
   audit_query_text: Record the text of the client query that triggered the audit event?
   ignored_cols:     COLUMNS TO exclude FROM UPDATE diffs, IGNORE updates that CHANGE only ignored cols.

        <programlisting>
DECLARE
  stm_targets text = &#39;INSERT OR UPDATE OR DELETE OR TRUNCATE&#39;;
  _q_txt text;
  _ignored_cols_snip text = &#39;&#39;;
BEGIN
    EXECUTE &#39;DROP TRIGGER IF EXISTS audit_trigger_row ON &#39; || target_table::text;
    EXECUTE &#39;DROP TRIGGER IF EXISTS audit_trigger_stm ON &#39; || target_table::text;
 
    IF audit_rows THEN
        IF array_length(ignored_cols,1) &gt; 0 THEN
            _ignored_cols_snip = &#39;, &#39; || quote_literal(ignored_cols);
        END IF;
        _q_txt = &#39;CREATE TRIGGER audit_trigger_row AFTER INSERT OR UPDATE OR DELETE ON &#39; || 
                 target_table::text || 
                 &#39; FOR EACH ROW EXECUTE PROCEDURE distribution.if_modified_func(&#39; ||
                 quote_literal(audit_query_text) || _ignored_cols_snip || &#39;);&#39;;
        RAISE NOTICE &#39;%&#39;,_q_txt;
        EXECUTE _q_txt;
        stm_targets = &#39;TRUNCATE&#39;;
    ELSE
    END IF;
 
    _q_txt = &#39;CREATE TRIGGER audit_trigger_stm AFTER &#39; || stm_targets || &#39; ON &#39; ||
             target_table::text ||
             &#39; FOR EACH STATEMENT EXECUTE PROCEDURE distribution.if_modified_func(&#39;||
             quote_literal(audit_query_text) || &#39;);&#39;;
    RAISE NOTICE &#39;%&#39;,_q_txt;
    EXECUTE _q_txt;
 
END;
</programlisting>
      </para>
    </section>

<!-- Function audit_table(target_table regclass) -->
    <section id="distribution.function.audit-table-target-table-regclass"
             xreflabel="distributionaudit_table(target_table regclass)">
      <title id="distribution.function.audit-table-target-table-regclass-title">
       audit_table(target_table regclass)
      </title>
      <titleabbrev id="distribution.function.audit-table-target-table-regclass-titleabbrev">
       audit_table(target_table regclass)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>SQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
SELECT distribution.audit_table($1, BOOLEAN &#39;t&#39;, BOOLEAN &#39;t&#39;);
</programlisting>
      </para>
    </section>

<!-- Function dimension_distance() -->
    <section id="distribution.function.dimension-distance"
             xreflabel="distributiondimension_distance()">
      <title id="distribution.function.dimension-distance-title">
       dimension_distance()
      </title>
      <titleabbrev id="distribution.function.dimension-distance-titleabbrev">
       dimension_distance()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       Fcn/Trigger: updates the distance between the two extremities of the arc.
        <programlisting>
	BEGIN
		UPDATE distribution.dimension SET 
			distance_extremities = ST_Distance( ST_StartPoint(NEW.geometry), ST_EndPoint(NEW.geometry) )
		WHERE id = NEW.id;
		RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function enable_schemaview(auxiliary character varying, main_table character varying) -->
    <section id="distribution.function.enable-schemaview-auxiliary-character-varying-main-table-character-varying"
             xreflabel="distributionenable_schemaview(auxiliary character varying, main_table character varying)">
      <title id="distribution.function.enable-schemaview-auxiliary-character-varying-main-table-character-varying-title">
       enable_schemaview(auxiliary character varying, main_table character varying)
      </title>
      <titleabbrev id="distribution.function.enable-schemaview-auxiliary-character-varying-main-table-character-varying-titleabbrev">
       enable_schemaview(auxiliary character varying, main_table character varying)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Add a column schema_force_view and _schema_view in given table. _schema_view is a boolean determined by the corresponding auxiliary table and might be overriden by _schema_force_view.
        <programlisting>
	BEGIN
		/* Add columns */
		EXECUTE &#39;ALTER TABLE distribution.&#39;||main_table||&#39; ADD COLUMN schema_force_view boolean default NULL;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||main_table||&#39; ADD COLUMN _schema_view boolean default NULL;&#39;;
		/* Constraint */
		EXECUTE &#39;ALTER TABLE distribution.&#39;||main_table||&#39; ADD CONSTRAINT &#39;||main_table||&#39;_schema_force_view FOREIGN KEY (schema_force_view) REFERENCES distribution.visible(id) MATCH FULL;&#39;;
		EXECUTE &#39; CREATE INDEX fki_&#39;||main_table||&#39;_schema_force_view ON distribution.&#39;||main_table||&#39;(schema_force_view);&#39;;
		
		/* trigger */
		EXECUTE &#39;CREATE OR REPLACE FUNCTION distribution.&#39;||main_table||&#39;_schemaview() RETURNS trigger AS
		&#39;&#39;
			DECLARE
				force_view boolean;
			BEGIN
				IF NEW.schema_force_view IS NULL THEN
					SELECT schema_view FROM distribution.&#39;||main_table||&#39;_&#39;||auxiliary||&#39; WHERE id = NEW.id_&#39;||auxiliary||&#39; INTO force_view;
				ELSE 
					force_view := NEW.schema_force_view;
				END IF;
				UPDATE distribution.&#39;||main_table||&#39; SET _schema_view = force_view WHERE id = NEW.id;
				RETURN NEW;
			END;
		&#39;&#39; LANGUAGE &#39;&#39;plpgsql&#39;&#39;;
		
		CREATE TRIGGER &#39;||main_table||&#39;_schemaview_trigger
			AFTER INSERT OR UPDATE OF schema_force_view,id_&#39;||auxiliary||&#39; ON distribution.&#39;||main_table||&#39;
			FOR EACH ROW EXECUTE PROCEDURE distribution.&#39;||main_table||&#39;_schemaview();
		COMMENT ON TRIGGER &#39;||main_table||&#39;_schemaview_trigger ON distribution.&#39;||main_table||&#39; IS &#39;&#39;Schema view depends on pipe function and on manual changes.&#39;&#39;;
		&#39;;
	END;
</programlisting>
      </para>
    </section>

<!-- Function geom_tool_line(character varying) -->
    <section id="distribution.function.geom-tool-line-character-varying"
             xreflabel="distributiongeom_tool_line(character varying)">
      <title id="distribution.function.geom-tool-line-character-varying-title">
       geom_tool_line(character varying)
      </title>
      <titleabbrev id="distribution.function.geom-tool-line-character-varying-titleabbrev">
       geom_tool_line(character varying)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Create geometric columns, constraint and triggers for tables with line items.
        <programlisting>
	DECLARE
		table_name ALIAS for $1;
	BEGIN
		/* Creates columns */
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_node_a       integer   ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_node_b       integer   ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_district     integer   ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_pressurezone integer   ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_printmap     integer[] ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _length2d       decimal(8,2) ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _length3d       decimal(8,2) ;&#39;;	
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _diff_elevation decimal(8,2) ;&#39;;	
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _printmaps      varchar(100) ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _districts      varchar(255) ;&#39;;
			
		/* Enables geometry */
		PERFORM addGeometryColumn(&#39;distribution&#39;, table_name, &#39;geometry&#39;, 21781, &#39;LINESTRING&#39;, 2);
		PERFORM addGeometryColumn(&#39;distribution&#39;, table_name, &#39;geometry_schematic&#39;, 21781, &#39;LINESTRING&#39;, 2);
		EXECUTE &#39;CREATE INDEX &#39;||table_name||&#39;_geoidx     ON distribution.&#39;||table_name||&#39; USING GIST ( geometry );&#39;;
		EXECUTE &#39;CREATE INDEX &#39;||table_name||&#39;_geoidx_sch ON distribution.&#39;||table_name||&#39; USING GIST ( geometry_schematic );&#39;;		

		/* Add constraints and indexes */
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_node_a       FOREIGN KEY (id_node_a)       REFERENCES distribution.node(id)         MATCH SIMPLE;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_node_b       FOREIGN KEY (id_node_b)       REFERENCES distribution.node(id)         MATCH SIMPLE;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_district     FOREIGN KEY (id_district)     REFERENCES distribution.district(id)     MATCH SIMPLE;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_pressurezone FOREIGN KEY (id_pressurezone) REFERENCES distribution.pressurezone(id) MATCH SIMPLE;&#39;;
		EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_node_a       ON distribution.&#39;||table_name||&#39;(id_node_a);&#39;;
		EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_node_b       ON distribution.&#39;||table_name||&#39;(id_node_b);&#39;;
		EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_district     ON distribution.&#39;||table_name||&#39;(id_district);&#39;;
		EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_pressurezone ON distribution.&#39;||table_name||&#39;(id_pressurezone);&#39;;
		
		/* Geometric triggers */
		EXECUTE &#39;
			CREATE OR REPLACE FUNCTION distribution.&#39;||table_name||&#39;_geom() RETURNS TRIGGER AS
				&#39;&#39;
				BEGIN
					UPDATE distribution.&#39;||table_name||&#39; SET
						id_node_a          = distribution.node_get_id(ST_StartPoint(NEW.geometry),true),
						id_node_b          = distribution.node_get_id(ST_EndPoint(  NEW.geometry),true),
						id_district        = distribution.get_district_id(NEW.geometry),
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						geometry_schematic = NEW.geometry,
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry),
						_length2d          = ST_Length(NEW.geometry),
						_length3d          = NULL,
						_diff_elevation    = NULL
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				&#39;&#39;
				LANGUAGE &#39;&#39;plpgsql&#39;&#39;;		
		&#39;;
		
		EXECUTE &#39;CREATE TRIGGER &#39;||table_name||&#39;_geom_trigger_insert
			AFTER INSERT ON distribution.&#39;||table_name||&#39;
			FOR EACH ROW
			EXECUTE PROCEDURE distribution.&#39;||table_name||&#39;_geom();&#39;;
		EXECUTE &#39;COMMENT ON TRIGGER &#39;||table_name||&#39;_geom_trigger_insert ON distribution.&#39;||table_name||&#39; IS &#39;&#39;Trigger: updates auto fields of the &#39;||table_name||&#39; after insert.&#39;&#39;;&#39;;

		EXECUTE &#39;CREATE TRIGGER &#39;||table_name||&#39;_geom_trigger_update
			AFTER UPDATE OF geometry ON distribution.&#39;||table_name||&#39; 
			FOR EACH ROW
			WHEN (ST_AsBinary(NEW.geometry) &lt;&gt; ST_AsBinary(OLD.geometry))
			EXECUTE PROCEDURE distribution.&#39;||table_name||&#39;_geom();&#39;;
		EXECUTE &#39;COMMENT ON TRIGGER &#39;||table_name||&#39;_geom_trigger_update ON distribution.&#39;||table_name||&#39; IS &#39;&#39;Trigger: updates auto fields of the &#39;||table_name||&#39; after geom update.&#39;&#39;;&#39;;
	END;
</programlisting>
      </para>
    </section>

<!-- Function geom_tool_point(auto_district character varying, get_pipe boolean, create_schematic boolean, create_node boolean, is_node boolean, table_name boolean) -->
    <section id="distribution.function.geom-tool-point-auto-district-character-varying-get-pipe-boolean-create-schematic-boolean-create-node-boolean-is-node-boolean-table-name-boolean"
             xreflabel="distributiongeom_tool_point(auto_district character varying, get_pipe boolean, create_schematic boolean, create_node boolean, is_node boolean, table_name boolean)">
      <title id="distribution.function.geom-tool-point-auto-district-character-varying-get-pipe-boolean-create-schematic-boolean-create-node-boolean-is-node-boolean-table-name-boolean-title">
       geom_tool_point(auto_district character varying, get_pipe boolean, create_schematic boolean, create_node boolean, is_node boolean, table_name boolean)
      </title>
      <titleabbrev id="distribution.function.geom-tool-point-auto-district-character-varying-get-pipe-boolean-create-schematic-boolean-create-node-boolean-is-node-boolean-table-name-boolean-titleabbrev">
       geom_tool_point(auto_district character varying, get_pipe boolean, create_schematic boolean, create_node boolean, is_node boolean, table_name boolean)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Create geometric columns, constraint and triggers for tables with point on node items. Second argument determines if node has to be created or not if not found.
        <programlisting>
	DECLARE
		sql_trigger varchar;
	BEGIN
		/* Creates columns */
		IF is_node IS TRUE THEN
			EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_node         integer   ;&#39;;
		END IF;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_district     integer   ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_pressurezone integer   ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_printmap     integer[] ;&#39;;
		IF get_pipe IS TRUE THEN
			EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN id_pipe         integer   ;&#39;;
		END IF;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _printmaps      varchar(100) ;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD COLUMN _districts      varchar(255) ;&#39;;
		
		/* Enables geometry */
		PERFORM addGeometryColumn(&#39;distribution&#39;, table_name, &#39;geometry&#39;, 21781, &#39;POINT&#39;, 2);
		EXECUTE &#39;CREATE INDEX &#39;||table_name||&#39;_geoidx     ON distribution.&#39;||table_name||&#39; USING GIST ( geometry );&#39;;
		IF create_schematic IS TRUE THEN
			PERFORM addGeometryColumn(&#39;distribution&#39;, table_name, &#39;geometry_schematic&#39;, 21781, &#39;POINT&#39;, 2);
			EXECUTE &#39;CREATE INDEX &#39;||table_name||&#39;_geoidx_sch ON distribution.&#39;||table_name||&#39; USING GIST ( geometry_schematic );&#39;;		
		END IF;
				
		/* Add constraints and indexes */
		IF is_node IS TRUE THEN
			EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_node         FOREIGN KEY (id_node)         REFERENCES distribution.node(id)         MATCH SIMPLE;&#39;;
		END IF;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_district     FOREIGN KEY (id_district)     REFERENCES distribution.district(id)     MATCH SIMPLE;&#39;;
		EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_pressurezone FOREIGN KEY (id_pressurezone) REFERENCES distribution.pressurezone(id) MATCH SIMPLE;&#39;;
		IF get_pipe IS TRUE THEN
			EXECUTE &#39;ALTER TABLE distribution.&#39;||table_name||&#39; ADD CONSTRAINT &#39;||table_name||&#39;_id_pipe FOREIGN KEY (id_pipe) REFERENCES distribution.pipe(id) MATCH SIMPLE;&#39;;
		END IF;
		IF is_node IS TRUE THEN
			EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_node     ON distribution.&#39;||table_name||&#39;(id_node);&#39;;
		END IF;
		EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_district     ON distribution.&#39;||table_name||&#39;(id_district);&#39;;
		EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_pressurezone ON distribution.&#39;||table_name||&#39;(id_pressurezone);&#39;;
		IF get_pipe IS TRUE THEN
			EXECUTE &#39;CREATE INDEX fki_&#39;||table_name||&#39;_id_pipe ON distribution.&#39;||table_name||&#39;(id_pipe);&#39;;
		END IF;
		
		/* Geometric triggers */
		sql_trigger := &#39;CREATE OR REPLACE FUNCTION distribution.&#39;||table_name||&#39;_geom() RETURNS TRIGGER AS
				&#39;&#39;
				BEGIN
					UPDATE distribution.&#39;||table_name||&#39; SET&#39;;
		IF is_node IS TRUE AND create_node IS TRUE THEN
			sql_trigger := sql_trigger || &#39;
						id_node            = distribution.node_get_id(NEW.geometry,&#39;||create_node||&#39;),
			&#39;;
		END IF;
		IF auto_district IS TRUE THEN
			sql_trigger := sql_trigger || &#39;
						id_district        = distribution.get_district_id(NEW.geometry),
			&#39;;
		END IF;
		sql_trigger := sql_trigger || &#39;
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),&#39;;
		IF get_pipe IS TRUE THEN
			sql_trigger := sql_trigger || &#39;
						id_pipe            = distribution.pipe_get_id(NEW.geometry),
			&#39;;
		END IF;		IF create_schematic IS TRUE THEN
			sql_trigger := sql_trigger || &#39;
						geometry_schematic = NEW.geometry,
			&#39;;
		END IF;
		sql_trigger := sql_trigger || &#39;
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				&#39;&#39;
				LANGUAGE &#39;&#39;plpgsql&#39;&#39;;		
		&#39;;
		EXECUTE sql_trigger;
		
		EXECUTE &#39;CREATE TRIGGER &#39;||table_name||&#39;_geom_trigger_insert
			AFTER INSERT ON distribution.&#39;||table_name||&#39;
			FOR EACH ROW
			EXECUTE PROCEDURE distribution.&#39;||table_name||&#39;_geom();&#39;;
		EXECUTE &#39;COMMENT ON TRIGGER &#39;||table_name||&#39;_geom_trigger_insert ON distribution.&#39;||table_name||&#39; IS &#39;&#39;Trigger: updates auto fields of the &#39;||table_name||&#39; after insert.&#39;&#39;;&#39;;

		EXECUTE &#39;CREATE TRIGGER &#39;||table_name||&#39;_geom_trigger_update
			AFTER UPDATE OF geometry ON distribution.&#39;||table_name||&#39; 
			FOR EACH ROW
			WHEN (ST_AsBinary(NEW.geometry) &lt;&gt; ST_AsBinary(OLD.geometry))
			EXECUTE PROCEDURE distribution.&#39;||table_name||&#39;_geom();&#39;;
		EXECUTE &#39;COMMENT ON TRIGGER &#39;||table_name||&#39;_geom_trigger_update ON distribution.&#39;||table_name||&#39; IS &#39;&#39;Trigger: updates auto fields of the &#39;||table_name||&#39; after geom update.&#39;&#39;;&#39;;
	END;
</programlisting>
      </para>
    </section>

<!-- Function get_district_id(public.geometry) -->
    <section id="distribution.function.get-district-id-public.geometry"
             xreflabel="distributionget_district_id(public.geometry)">
      <title id="distribution.function.get-district-id-public.geometry-title">
       get_district_id(public.geometry)
      </title>
      <titleabbrev id="distribution.function.get-district-id-public.geometry-titleabbrev">
       get_district_id(public.geometry)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns the id of the first overlapping district.
        <programlisting>
	DECLARE
		geom ALIAS FOR $1;
		id_district integer;
	BEGIN
		SELECT district.id INTO id_district
			FROM  distribution.district
			WHERE ST_Intersects(geom,district.geometry) IS TRUE
			LIMIT 1;
		RETURN id_district;
	END;
</programlisting>
      </para>
    </section>

<!-- Function get_districts(public.geometry) -->
    <section id="distribution.function.get-districts-public.geometry"
             xreflabel="distributionget_districts(public.geometry)">
      <title id="distribution.function.get-districts-public.geometry-title">
       get_districts(public.geometry)
      </title>
      <titleabbrev id="distribution.function.get-districts-public.geometry-titleabbrev">
       get_districts(public.geometry)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>text</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns a coma separeted list of the districts overlapping the given geometry.
        <programlisting>
	DECLARE
		geom ALIAS FOR $1;
		result text;
	BEGIN
		SELECT string_agg(district.name , &#39;, &#39;) INTO result
			FROM  distribution.district
			WHERE ST_Intersects(geom,district.geometry) IS TRUE;
		RETURN result;
	END;
</programlisting>
      </para>
    </section>

<!-- Function get_parent(integer, integer) -->
    <section id="distribution.function.get-parent-integer-integer"
             xreflabel="distributionget_parent(integer, integer)">
      <title id="distribution.function.get-parent-integer-integer-title">
       get_parent(integer, integer)
      </title>
      <titleabbrev id="distribution.function.get-parent-integer-integer-titleabbrev">
       get_parent(integer, integer)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer</seg>
        </seglistitem>
       </segmentedlist>
 
       Function to get a group ID (parent/children). Also works in case of sub-parent
        <programlisting>
	DECLARE
		childid ALIAS FOR $1;
		parentid ALIAS FOR $2;
	BEGIN
		IF parentid IS NULL THEN
			RETURN childid;
		END IF;
		LOOP
			SELECT id_parent INTO childid 
			FROM distribution.pipe_schema_viewableitems
			WHERE id = parentid;

			IF childid IS NOT NULL THEN
				parentid := childid;
			ELSE
				RETURN parentid;
			END IF;
		END LOOP;
	END
</programlisting>
      </para>
    </section>

<!-- Function get_pressurezone_id(public.geometry) -->
    <section id="distribution.function.get-pressurezone-id-public.geometry"
             xreflabel="distributionget_pressurezone_id(public.geometry)">
      <title id="distribution.function.get-pressurezone-id-public.geometry-title">
       get_pressurezone_id(public.geometry)
      </title>
      <titleabbrev id="distribution.function.get-pressurezone-id-public.geometry-titleabbrev">
       get_pressurezone_id(public.geometry)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns the id of the first overlapping pressurezone.
        <programlisting> 
	DECLARE
		geom ALIAS FOR $1;
		id_pressurezone integer;
	BEGIN
		SELECT pressurezone.id INTO id_pressurezone
			FROM  distribution.pressurezone
			WHERE ST_Intersects(geom,pressurezone.geometry) IS TRUE
			ORDER BY ST_Length(ST_Intersection(geom,pressurezone.geometry)) DESC
			LIMIT 1;
		RETURN id_pressurezone;
	END
</programlisting>
      </para>
    </section>

<!-- Function get_printmap_id(public.geometry) -->
    <section id="distribution.function.get-printmap-id-public.geometry"
             xreflabel="distributionget_printmap_id(public.geometry)">
      <title id="distribution.function.get-printmap-id-public.geometry-title">
       get_printmap_id(public.geometry)
      </title>
      <titleabbrev id="distribution.function.get-printmap-id-public.geometry-titleabbrev">
       get_printmap_id(public.geometry)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer[]</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns the id of the first overlapping printmap.
        <programlisting>
	DECLARE
		geom ALIAS FOR $1;
	BEGIN
		RETURN ARRAY( SELECT printmap.id FROM  distribution.printmap WHERE ST_Intersects(geom,printmap.geometry) IS TRUE);
	END;
</programlisting>
      </para>
    </section>

<!-- Function get_printmaps(public.geometry) -->
    <section id="distribution.function.get-printmaps-public.geometry"
             xreflabel="distributionget_printmaps(public.geometry)">
      <title id="distribution.function.get-printmaps-public.geometry-title">
       get_printmaps(public.geometry)
      </title>
      <titleabbrev id="distribution.function.get-printmaps-public.geometry-titleabbrev">
       get_printmaps(public.geometry)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>text</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns a string contaning all the short names of the polygons in table printmap which overlap the given geometry.
        <programlisting>
	DECLARE
		geom ALIAS FOR $1;
		result text;
	BEGIN
		SELECT string_agg(printmap.shortname , &#39;, &#39;) INTO result
			FROM  distribution.printmap
			WHERE ST_Intersects(geom,printmap.geometry) IS TRUE;
		RETURN result;
	END;
</programlisting>
      </para>
    </section>

<!-- Function hydrant_geom() -->
    <section id="distribution.function.hydrant-geom"
             xreflabel="distributionhydrant_geom()">
      <title id="distribution.function.hydrant-geom-title">
       hydrant_geom()
      </title>
      <titleabbrev id="distribution.function.hydrant-geom-titleabbrev">
       hydrant_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.hydrant SET
						id_node            = distribution.node_get_id(NEW.geometry,true),
			
						id_district        = distribution.get_district_id(NEW.geometry),
			
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						geometry_schematic = NEW.geometry,
			
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function if_modified_func() -->
    <section id="distribution.function.if-modified-func"
             xreflabel="distributionif_modified_func()">
      <title id="distribution.function.if-modified-func-title">
       if_modified_func()
      </title>
      <titleabbrev id="distribution.function.if-modified-func-titleabbrev">
       if_modified_func()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
Track changes TO a TABLE at the statement AND/OR row level.
 
Optional parameters TO TRIGGER IN CREATE TRIGGER call:
 
param 0: BOOLEAN, whether TO log the query text. DEFAULT &apos;t&apos;.
 
param 1: text[], COLUMNS TO IGNORE IN updates. DEFAULT [].
 
         Updates TO ignored cols are omitted FROM changed_fields.
 
         Updates WITH only ignored cols changed are NOT inserted
         INTO the audit log.
 
         Almost ALL the processing work IS still done FOR updates
         that ignored. IF you need TO save the LOAD, you need TO USE
         WHEN clause ON the TRIGGER instead.
 
         No warning OR error IS issued IF ignored_cols contains COLUMNS
         that do NOT exist IN the target TABLE. This lets you specify
         a standard SET of ignored COLUMNS.
 
There IS no parameter TO disable logging of VALUES. ADD this TRIGGER AS
a &apos;FOR EACH STATEMENT&apos; rather than &apos;FOR EACH ROW&apos; TRIGGER IF you do NOT
want TO log row VALUES.
 
Note that the user name logged IS the login role FOR the session. The audit TRIGGER
cannot obtain the active role because it IS reset BY the SECURITY DEFINER invocation
of the audit TRIGGER its self.

        <programlisting>
DECLARE
    audit_row distribution.logged_actions;
    include_values BOOLEAN;
    log_diffs BOOLEAN;
    h_old hstore;
    h_new hstore;
    excluded_cols text[] = ARRAY[]::text[];
BEGIN
    IF TG_WHEN &lt;&gt; &#39;AFTER&#39; THEN
        RAISE EXCEPTION &#39;distribution.if_modified_func() may only run as an AFTER trigger&#39;;
    END IF;
 
    audit_row = ROW(
        NEXTVAL(&#39;distribution.logged_actions_event_id_seq&#39;), -- event_id
        TG_TABLE_SCHEMA::text,                        -- schema_name
        TG_TABLE_NAME::text,                          -- table_name
        TG_RELID,                                     -- relation OID for much quicker searches
        session_user::text,                           -- session_user_name
        current_timestamp,                            -- action_tstamp_tx
        statement_timestamp(),                        -- action_tstamp_stm
        clock_timestamp(),                            -- action_tstamp_clk
        txid_current(),                               -- transaction ID
        (SELECT setting FROM pg_settings WHERE name = &#39;application_name&#39;),
        inet_client_addr(),                           -- client_addr
        inet_client_port(),                           -- client_port
        current_query(),                              -- top-level query or queries (if multistatement) from client
        substring(TG_OP,1,1),                         -- action
        NULL, NULL,                                   -- row_data, changed_fields
        &#39;f&#39;                                           -- statement_only
        );
 
    IF NOT TG_ARGV[0]::BOOLEAN IS DISTINCT FROM &#39;f&#39;::BOOLEAN THEN
        audit_row.client_query = NULL;
    END IF;
 
    IF TG_ARGV[1] IS NOT NULL THEN
        excluded_cols = TG_ARGV[1]::text[];
    END IF;
 
    IF (TG_OP = &#39;UPDATE&#39; AND TG_LEVEL = &#39;ROW&#39;) THEN
        audit_row.row_data = hstore(OLD.*);
        audit_row.changed_fields =  (hstore(NEW.*) - audit_row.row_data) - excluded_cols;
        IF audit_row.changed_fields = hstore(&#39;&#39;) THEN
            -- All changed fields are ignored. Skip this update.
            RETURN NULL;
        END IF;
    ELSIF (TG_OP = &#39;DELETE&#39; AND TG_LEVEL = &#39;ROW&#39;) THEN
        audit_row.row_data = hstore(OLD.*) - excluded_cols;
    ELSIF (TG_OP = &#39;INSERT&#39; AND TG_LEVEL = &#39;ROW&#39;) THEN
        audit_row.row_data = hstore(NEW.*) - excluded_cols;
    ELSIF (TG_LEVEL = &#39;STATEMENT&#39; AND TG_OP IN (&#39;INSERT&#39;,&#39;UPDATE&#39;,&#39;DELETE&#39;,&#39;TRUNCATE&#39;)) THEN
        audit_row.statement_only = &#39;t&#39;;
    ELSE
        RAISE EXCEPTION &#39;[distribution.if_modified_func] - Trigger func added as trigger for unhandled case: %, %&#39;,TG_OP, TG_LEVEL;
        RETURN NULL;
    END IF;
    INSERT INTO distribution.logged_actions VALUES (audit_row.*);
    RETURN NULL;
END;
</programlisting>
      </para>
    </section>

<!-- Function installation_geom() -->
    <section id="distribution.function.installation-geom"
             xreflabel="distributioninstallation_geom()">
      <title id="distribution.function.installation-geom-title">
       installation_geom()
      </title>
      <titleabbrev id="distribution.function.installation-geom-titleabbrev">
       installation_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.installation SET
						id_node            = distribution.node_get_id(NEW.geometry,true),
			
						id_district        = distribution.get_district_id(NEW.geometry),
			
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						geometry_schematic = NEW.geometry,
			
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function installation_schemaview() -->
    <section id="distribution.function.installation-schemaview"
             xreflabel="distributioninstallation_schemaview()">
      <title id="distribution.function.installation-schemaview-title">
       installation_schemaview()
      </title>
      <titleabbrev id="distribution.function.installation-schemaview-titleabbrev">
       installation_schemaview()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
			DECLARE
				force_view boolean;
			BEGIN
				IF NEW.schema_force_view IS NULL THEN
					SELECT schema_view FROM distribution.installation_type WHERE id = NEW.id_type INTO force_view;
				ELSE 
					force_view := NEW.schema_force_view;
				END IF;
				UPDATE distribution.installation SET _schema_view = force_view WHERE id = NEW.id;
				RETURN NEW;
			END;
		</programlisting>
      </para>
    </section>

<!-- Function installation_tank_trigger_fcn() -->
    <section id="distribution.function.installation-tank-trigger-fcn"
             xreflabel="distributioninstallation_tank_trigger_fcn()">
      <title id="distribution.function.installation-tank-trigger-fcn-title">
       installation_tank_trigger_fcn()
      </title>
      <titleabbrev id="distribution.function.installation-tank-trigger-fcn-titleabbrev">
       installation_tank_trigger_fcn()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
	DECLARE
		lpc1 double precision;
		lpc2 double precision;
	BEGIN
		SELECT distribution.litres_per_cm(NEW.cistern1_id_type,NEW.cistern1_dimension_1,NEW.cistern1_dimension_2) INTO lpc1;
		SELECT distribution.litres_per_cm(NEW.cistern2_id_type,NEW.cistern2_dimension_1,NEW.cistern2_dimension_2) INTO lpc2;
		 UPDATE distribution.installation_tank
			SET _cistern1_litrepercm = lpc1,
			    _cistern2_litrepercm = lpc2,
				_litrepercm = COALESCE(lpc1,0)+COALESCE(lpc2,0)
			WHERE installation_tank.id = NEW.id;
		 RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function installation_trigger_fcn() -->
    <section id="distribution.function.installation-trigger-fcn"
             xreflabel="distributioninstallation_trigger_fcn()">
      <title id="distribution.function.installation-trigger-fcn-title">
       installation_trigger_fcn()
      </title>
      <titleabbrev id="distribution.function.installation-trigger-fcn-titleabbrev">
       installation_trigger_fcn()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting> 
	BEGIN
		 UPDATE distribution.installation 
			SET _complete_name = installation_type.shortname||&#39; &#39;||NEW.name
			FROM distribution.installation_type 
			WHERE installation.id = NEW.id
			AND installation.id_type = installation_type.id;
		 RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function leak_geom() -->
    <section id="distribution.function.leak-geom"
             xreflabel="distributionleak_geom()">
      <title id="distribution.function.leak-geom-title">
       leak_geom()
      </title>
      <titleabbrev id="distribution.function.leak-geom-titleabbrev">
       leak_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.leak SET
						id_district        = distribution.get_district_id(NEW.geometry),
			
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						id_pipe            = distribution.pipe_get_id(NEW.geometry),
			
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function leak_repaired() -->
    <section id="distribution.function.leak-repaired"
             xreflabel="distributionleak_repaired()">
      <title id="distribution.function.leak-repaired-title">
       leak_repaired()
      </title>
      <titleabbrev id="distribution.function.leak-repaired-titleabbrev">
       leak_repaired()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       Fcn/Trigger: updates the repaired status of the leak.
        <programlisting>
	BEGIN
		 UPDATE distribution.leak SET _repaired = CASE WHEN repair_date IS NULL THEN false ELSE true END 
			WHERE id = NEW.id;
		 RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function litres_per_cm(dim2 integer, dim1 double precision, id_type double precision) -->
    <section id="distribution.function.litres-per-cm-dim2-integer-dim1-double-precision-id-type-double-precision"
             xreflabel="distributionlitres_per_cm(dim2 integer, dim1 double precision, id_type double precision)">
      <title id="distribution.function.litres-per-cm-dim2-integer-dim1-double-precision-id-type-double-precision-title">
       litres_per_cm(dim2 integer, dim1 double precision, id_type double precision)
      </title>
      <titleabbrev id="distribution.function.litres-per-cm-dim2-integer-dim1-double-precision-id-type-double-precision-titleabbrev">
       litres_per_cm(dim2 integer, dim1 double precision, id_type double precision)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>double precision</seg>
        </seglistitem>
       </segmentedlist>
 
       Calculate the litres_per_cm of a tank cistern.
        <programlisting>
	BEGIN
		IF id_type = 1 THEN
			return pi()*(dim1/2)^2*10;
		ELSEIF id_type = 2 THEN
			return dim2*dim2*10;
		ELSE
			return NULL;
		END IF;
	END
</programlisting>
      </para>
    </section>

<!-- Function node_altitude() -->
    <section id="distribution.function.node-altitude"
             xreflabel="distributionnode_altitude()">
      <title id="distribution.function.node-altitude-title">
       node_altitude()
      </title>
      <titleabbrev id="distribution.function.node-altitude-titleabbrev">
       node_altitude()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Fill the altitude of the node.
        <programlisting>
	BEGIN
		UPDATE distribution.node SET altitude_dtm = altitude.altitude(geometry) WHERE altitude_dtm IS NULL ;
	END;
</programlisting>
      </para>
    </section>

<!-- Function node_geom() -->
    <section id="distribution.function.node-geom"
             xreflabel="distributionnode_geom()">
      <title id="distribution.function.node-geom-title">
       node_geom()
      </title>
      <titleabbrev id="distribution.function.node-geom-titleabbrev">
       node_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       Fcn/Trigger: set uptodate to false for altitude when geometry changes.
        <programlisting> 
	BEGIN
		UPDATE distribution.node SET
			altitude_dtm = NULL
		WHERE id = NEW.id ;
		RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function node_get_id(public.geometry, boolean) -->
    <section id="distribution.function.node-get-id-public.geometry-boolean"
             xreflabel="distributionnode_get_id(public.geometry, boolean)">
      <title id="distribution.function.node-get-id-public.geometry-boolean-title">
       node_get_id(public.geometry, boolean)
      </title>
      <titleabbrev id="distribution.function.node-get-id-public.geometry-boolean-titleabbrev">
       node_get_id(public.geometry, boolean)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns the node for a given geometry (point). If node does not exist and if specified in argument, it is created.
        <programlisting>
	DECLARE
		point ALIAS for $1;
		place_node ALIAS for $2;
		node_id integer;
	BEGIN
		SELECT id FROM distribution.node WHERE ST_DWithin(point,geometry,0) IS TRUE LIMIT 1 INTO node_id;
		IF node_id IS NULL AND place_node IS TRUE THEN
			INSERT INTO distribution.node (geometry) VALUES (point);
			SELECT id FROM distribution.node WHERE ST_DWithin(point,geometry,0) IS TRUE LIMIT 1 INTO node_id;
		END IF;
		RETURN node_id;	
	END;
</programlisting>
      </para>
    </section>

<!-- Function node_set_type() -->
    <section id="distribution.function.node-set-type"
             xreflabel="distributionnode_set_type()">
      <title id="distribution.function.node-set-type-title">
       node_set_type()
      </title>
      <titleabbrev id="distribution.function.node-set-type-titleabbrev">
       node_set_type()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Set the type and orientation for node. If three pipe arrives at the node: intersection. If one pipe: end. If two: depends on characteristics of pipe: year (is different), material (and year), diameter(and material/year)
        <programlisting>
	DECLARE
		node record;
	BEGIN
		FOR node IN SELECT id FROM distribution.node ORDER BY id LOOP
			PERFORM distribution.node_type(node.id);
		END LOOP;
	END;
</programlisting>
      </para>
    </section>

<!-- Function node_type(node_id integer) -->
    <section id="distribution.function.node-type-node-id-integer"
             xreflabel="distributionnode_type(node_id integer)">
      <title id="distribution.function.node-type-node-id-integer-title">
       node_type(node_id integer)
      </title>
      <titleabbrev id="distribution.function.node-type-node-id-integer-titleabbrev">
       node_type(node_id integer)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Set the orientation and type for a node. If three pipe arrives at the node: intersection. If one pipe: end. If two: depends on characteristics of pipe: year (is different), material (and year), diameter(and material/year)
        <programlisting>
	DECLARE
		pipeitem        record                   ;
		pipe_id         integer                  ;
		grouped         record                   ;
		Tyear           integer                  ;
		Tmaterial       varchar(30)              ;
		Tdiameter       varchar(10)              ;
		looppos         integer          := 0    ;
		type            varchar(20)              ;
		ori1            double precision := 0    ;
		ori2            double precision := 0    ;
		orientation     float            := 0    ;
		is_under_object boolean          := false;
		node_geom       geometry(Point, 21781)   ;
		intersects      boolean                  ;
	BEGIN
		/* determine if the node is under an object (hydrant, valve, etc.) */
		IF node_id IN (SELECT id_node FROM distribution.valve) THEN
			type := &#39;valve&#39;;
			is_under_object := true;
		ELSEIF node_id IN (SELECT id_node FROM distribution.installation) THEN
			type := &#39;installation&#39;;
			is_under_object := true;
		ELSEIF node_id IN (SELECT id_node FROM distribution.hydrant) THEN
			type := &#39;hydrant&#39;;
			is_under_object := true;
		END IF;
		/* count the active pipes associated to this node */
		SELECT
			COUNT(pipe.id)         AS count        ,
			bool_or(_schema_view)  AS schema_view  ,
			bool_or(status.active) AS status_active
			INTO grouped
			FROM distribution.pipe
			INNER JOIN distribution.status ON pipe.id_status = status.id
			WHERE (id_node_a = node_id OR id_node_b = node_id)
			AND status.active IS TRUE;
		/* if not connected, deleted if not under_object */
		IF grouped.count = 0 AND is_under_object IS false THEN
			/* check it is not associated to inactive pipes */
			IF node_id NOT IN (SELECT id_node_a FROM distribution.pipe UNION SELECT id_node_b FROM distribution.pipe) THEN
				RAISE NOTICE &#39;Delete node %&#39; , node_id ;
				DELETE FROM distribution.node WHERE id = node_id ;
			END IF;
		/* if 1 or 2 pipes associated */
		ELSEIF grouped.count &lt;= 2 THEN
			/* loop over them, and take the 2 first/last points of the pipe to determine orientation */
			FOR pipeitem IN (
				SELECT 	pipe.id, pipe.year, pipe_material._fancyname, pipe_material.diameter,
						ST_PointN(geometry,2)   AS point_1,
						ST_StartPoint(geometry) AS point_2
						FROM distribution.pipe
						INNER JOIN distribution.pipe_material ON pipe.id_material = pipe_material.id
						INNER JOIN distribution.status ON pipe.id_status = status.id
						WHERE id_node_a = node_id AND status.active IS TRUE
				UNION ALL
				SELECT	pipe.id, pipe.year, pipe_material._fancyname, pipe_material.diameter,
						ST_PointN(geometry,ST_NPoints(geometry)-1) AS point_1,
						ST_EndPoint(geometry)                      AS point_2
						FROM distribution.pipe
						INNER JOIN distribution.pipe_material ON pipe.id_material = pipe_material.id
						INNER JOIN distribution.status ON pipe.id_status = status.id
						WHERE id_node_b = node_id AND status.active IS TRUE
			) LOOP
				IF looppos=0 THEN
					/* first pipe */
					type := &#39;one&#39;;
					Tyear     := pipeitem.year;
					Tmaterial := pipeitem._fancyname;
					Tdiameter := pipeitem.diameter;
					pipe_id   := pipeitem.id;
					looppos   := 1;
					SELECT ST_Azimuth(pipeitem.point_1,pipeitem.point_2) INTO orientation ;
				ELSE
					/* second pipe if exists */
					type := &#39;two_same&#39;;
					IF Tyear     != pipeitem.year       THEN type := &#39;two_year&#39;    ; END IF;
					IF Tmaterial != pipeitem._fancyname THEN type := &#39;two_material&#39;; END IF;
					IF Tdiameter != pipeitem.diameter   THEN type := &#39;two_diameter&#39;; END IF;
					SELECT ST_Azimuth(pipeitem.point_1,pipeitem.point_2) INTO ori2 ;
					SELECT ATAN2( (SIN(orientation)+SIN(ori2))/2 , (COS(orientation)+COS(ori2))/2 ) INTO orientation;
				END IF;
			END LOOP;
			SELECT degrees(orientation) INTO orientation;
			IF grouped.count = 1 THEN
				/* if the node is only on 1 pipe, check if it intersects another pipe. If yes, hide it */
				SELECT geometry FROM distribution.node WHERE id = node_id INTO node_geom;
				/* st_intersects does not work as expected. */
				SELECT bool_or(ST_DWithin(node_geom, pipe.geometry, 0.0001)) FROM distribution.pipe WHERE id != pipe_id INTO intersects;
				IF intersects IS TRUE THEN
					type := &#39;one_hidden&#39;;
				END IF;
			END IF;
		/* more than 2 pipes connected, nothing to calculate */
		ELSEIF grouped.count &gt; 2 THEN
			type := &#39;three&#39;;
		END IF;
		/* update the node table */
		UPDATE distribution.node SET
			_type          = type,
			_orientation   = orientation,
			_schema_view   = grouped.schema_view,
			_status_active = grouped.status_active,
			_under_object  = is_under_object
			WHERE id = node_id;
		/*RAISE NOTICE &#39;% %&#39; , node_id , orientation;*/
	END;
</programlisting>
      </para>
    </section>

<!-- Function pipe_count_valve(integer) -->
    <section id="distribution.function.pipe-count-valve-integer"
             xreflabel="distributionpipe_count_valve(integer)">
      <title id="distribution.function.pipe-count-valve-integer-title">
       pipe_count_valve(integer)
      </title>
      <titleabbrev id="distribution.function.pipe-count-valve-integer-titleabbrev">
       pipe_count_valve(integer)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer</seg>
        </seglistitem>
       </segmentedlist>
 
       Determine if a pipe is closed by a valve or not.
        <programlisting>
	DECLARE
		pipe_id ALIAS for $1;
		valve_count integer;
	BEGIN
		SELECT COUNT(id) FROM distribution.valve WHERE id_pipe = pipe_id INTO valve_count;
		RETURN valve_count ;
	END
</programlisting>
      </para>
    </section>

<!-- Function pipe_geom() -->
    <section id="distribution.function.pipe-geom"
             xreflabel="distributionpipe_geom()">
      <title id="distribution.function.pipe-geom-title">
       pipe_geom()
      </title>
      <titleabbrev id="distribution.function.pipe-geom-titleabbrev">
       pipe_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.pipe SET
						id_node_a          = distribution.node_get_id(ST_StartPoint(NEW.geometry),true),
						id_node_b          = distribution.node_get_id(ST_EndPoint(  NEW.geometry),true),
						id_district        = distribution.get_district_id(NEW.geometry),
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						geometry_schematic = NEW.geometry,
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry),
						_length2d          = ST_Length(NEW.geometry),
						_length3d          = NULL,
						_diff_elevation    = NULL
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function pipe_get_id(public.geometry) -->
    <section id="distribution.function.pipe-get-id-public.geometry"
             xreflabel="distributionpipe_get_id(public.geometry)">
      <title id="distribution.function.pipe-get-id-public.geometry-title">
       pipe_get_id(public.geometry)
      </title>
      <titleabbrev id="distribution.function.pipe-get-id-public.geometry-titleabbrev">
       pipe_get_id(public.geometry)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>integer</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns the pipe at a given position.
        <programlisting>
	DECLARE
		point ALIAS for $1;
		pipe_id integer;
	BEGIN
		SELECT id FROM distribution.pipe WHERE ST_Intersects(point,geometry) LIMIT 1 INTO pipe_id ;
		RETURN pipe_id;	
	END;
</programlisting>
      </para>
    </section>

<!-- Function pipe_isclosed(integer) -->
    <section id="distribution.function.pipe-isclosed-integer"
             xreflabel="distributionpipe_isclosed(integer)">
      <title id="distribution.function.pipe-isclosed-integer-title">
       pipe_isclosed(integer)
      </title>
      <titleabbrev id="distribution.function.pipe-isclosed-integer-titleabbrev">
       pipe_isclosed(integer)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>boolean</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
	DECLARE
		pipe_id ALIAS for $1;
		isClosed boolean;
	BEGIN
		SELECT bool_or(closed) FROM distribution.valve WHERE id_pipe = pipe_id INTO isClosed;
		RETURN isClosed ;
	END
</programlisting>
      </para>
    </section>

<!-- Function pipe_length3d() -->
    <section id="distribution.function.pipe-length3d"
             xreflabel="distributionpipe_length3d()">
      <title id="distribution.function.pipe-length3d-title">
       pipe_length3d()
      </title>
      <titleabbrev id="distribution.function.pipe-length3d-titleabbrev">
       pipe_length3d()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>void</seg>
        </seglistitem>
       </segmentedlist>
 
       Fill the 3d length of the pipe.
        <programlisting>
	DECLARE
		length double precision;
		pipeitem RECORD;
	BEGIN
		FOR pipeitem IN SELECT id,geometry,tunnel_or_bridge FROM distribution.pipe WHERE _length3d IS NULL ORDER BY id LOOP
			IF pipeitem.tunnel_or_bridge IS TRUE THEN
				length := pipeitem._length2d;
			ELSE
				RAISE NOTICE &#39;%&#39;, pipeitem.id;
				SELECT altitude.length3d(pipeitem.geometry) INTO length;
			END IF;
			UPDATE distribution.pipe SET _length3d = length WHERE id = pipeitem.id;
		END LOOP;
	END
</programlisting>
      </para>
    </section>

<!-- Function pipe_material_fancy_name() -->
    <section id="distribution.function.pipe-material-fancy-name"
             xreflabel="distributionpipe_material_fancy_name()">
      <title id="distribution.function.pipe-material-fancy-name-title">
       pipe_material_fancy_name()
      </title>
      <titleabbrev id="distribution.function.pipe-material-fancy-name-titleabbrev">
       pipe_material_fancy_name()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       Fcn/Trigger: updates the fancy name in the material table.
        <programlisting>
	BEGIN
		 UPDATE distribution.pipe_material SET _fancy_name = NEW.shortname||&#39; &#39;||NEW.diameter WHERE id = NEW.id ;
		 RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function pipe_schemaview() -->
    <section id="distribution.function.pipe-schemaview"
             xreflabel="distributionpipe_schemaview()">
      <title id="distribution.function.pipe-schemaview-title">
       pipe_schemaview()
      </title>
      <titleabbrev id="distribution.function.pipe-schemaview-titleabbrev">
       pipe_schemaview()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
			DECLARE
				force_view boolean;
			BEGIN
				IF NEW.schema_force_view IS NULL THEN
					SELECT schema_view FROM distribution.pipe_function WHERE id = NEW.id_function INTO force_view;
				ELSE 
					force_view := NEW.schema_force_view;
				END IF;
				UPDATE distribution.pipe SET _schema_view = force_view WHERE id = NEW.id;
				RETURN NEW;
			END;
		</programlisting>
      </para>
    </section>

<!-- Function pipe_tunnelbridge() -->
    <section id="distribution.function.pipe-tunnelbridge"
             xreflabel="distributionpipe_tunnelbridge()">
      <title id="distribution.function.pipe-tunnelbridge-title">
       pipe_tunnelbridge()
      </title>
      <titleabbrev id="distribution.function.pipe-tunnelbridge-titleabbrev">
       pipe_tunnelbridge()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting> 
	BEGIN
		UPDATE distribution.pipe SET _length3d = NULL, _diff_elevation = NULL WHERE id = NEW.id;
		RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function printmap_geom() -->
    <section id="distribution.function.printmap-geom"
             xreflabel="distributionprintmap_geom()">
      <title id="distribution.function.printmap-geom-title">
       printmap_geom()
      </title>
      <titleabbrev id="distribution.function.printmap-geom-titleabbrev">
       printmap_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       Fcn/Trigger: updates the size of the bounding box into width/length fields.
        <programlisting> 
	BEGIN
		UPDATE distribution.printmap SET 
			_east   = ST_XMax(BOX2D(NEW.geometry))-ST_XMin(BOX2D(NEW.geometry)),
			_north  = ST_YMax(BOX2D(NEW.geometry))-ST_YMin(BOX2D(NEW.geometry))
		WHERE id = NEW.id ;
		RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function samplingpoint_geom() -->
    <section id="distribution.function.samplingpoint-geom"
             xreflabel="distributionsamplingpoint_geom()">
      <title id="distribution.function.samplingpoint-geom-title">
       samplingpoint_geom()
      </title>
      <titleabbrev id="distribution.function.samplingpoint-geom-titleabbrev">
       samplingpoint_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.samplingpoint SET
						id_district        = distribution.get_district_id(NEW.geometry),
			
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function subscriber_fullid() -->
    <section id="distribution.function.subscriber-fullid"
             xreflabel="distributionsubscriber_fullid()">
      <title id="distribution.function.subscriber-fullid-title">
       subscriber_fullid()
      </title>
      <titleabbrev id="distribution.function.subscriber-fullid-titleabbrev">
       subscriber_fullid()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       Fcn/Trigger: updates the full identification (district prefix) of the client.
        <programlisting>
	BEGIN
		 UPDATE distribution.subscriber SET _client_identification_full = district.subscriber_prefix||&#39;_&#39;||NEW.client_identification FROM distribution.district WHERE subscriber.id = NEW.id AND district.id = NEW.id_district ;
		 RETURN NEW;
	END;
</programlisting>
      </para>
    </section>

<!-- Function subscriber_geom() -->
    <section id="distribution.function.subscriber-geom"
             xreflabel="distributionsubscriber_geom()">
      <title id="distribution.function.subscriber-geom-title">
       subscriber_geom()
      </title>
      <titleabbrev id="distribution.function.subscriber-geom-titleabbrev">
       subscriber_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.subscriber SET
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function table_fields(character varying) -->
    <section id="distribution.function.table-fields-character-varying"
             xreflabel="distributiontable_fields(character varying)">
      <title id="distribution.function.table-fields-character-varying-title">
       table_fields(character varying)
      </title>
      <titleabbrev id="distribution.function.table-fields-character-varying-titleabbrev">
       table_fields(character varying)
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>text</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
	DECLARE
		ftable ALIAS FOR $1;
		result text;
	BEGIN
		SELECT distribution.table_fields(ftable,&#39;&#39;&#39;&#39;) INTO result;
		RETURN result;
	END			;
</programlisting>
      </para>
    </section>

<!-- Function table_fields(exclude character varying,  character varying[]) -->
    <section id="distribution.function.table-fields-exclude-character-varying-character-varyingARRAY"
             xreflabel="distributiontable_fields(exclude character varying,  character varying[])">
      <title id="distribution.function.table-fields-exclude-character-varying-character-varyingARRAY-title">
       table_fields(exclude character varying,  character varying[])
      </title>
      <titleabbrev id="distribution.function.table-fields-exclude-character-varying-character-varyingARRAY-titleabbrev">
       table_fields(exclude character varying,  character varying[])
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>text</seg>
        </seglistitem>
       </segmentedlist>
 
       Returns field names from a table.
        <programlisting>
	DECLARE
		ftable ALIAS FOR $1;
		result text;
	BEGIN
		SELECT
			string_agg(pg_attribute.attname , &#39;&#39;, &#39;&#39;) INTO result
		FROM
			pg_class, pg_attribute
		WHERE
			pg_class.relname = ftable 
			AND pg_class.oid = pg_attribute.attrelid 
			AND pg_attribute.attnum &gt; 0
			AND pg_attribute.attname != all(exclude)
		;
		RETURN result;
	END
</programlisting>
      </para>
    </section>

<!-- Function valve_geom() -->
    <section id="distribution.function.valve-geom"
             xreflabel="distributionvalve_geom()">
      <title id="distribution.function.valve-geom-title">
       valve_geom()
      </title>
      <titleabbrev id="distribution.function.valve-geom-titleabbrev">
       valve_geom()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
				BEGIN
					UPDATE distribution.valve SET
						id_district        = distribution.get_district_id(NEW.geometry),
			
						id_pressurezone    = distribution.get_pressurezone_id(NEW.geometry),
						id_printmap        = distribution.get_printmap_id(NEW.geometry),
						id_pipe            = distribution.pipe_get_id(NEW.geometry),
			
						geometry_schematic = NEW.geometry,
			
						_printmaps         = distribution.get_printmaps(NEW.geometry),
						_districts         = distribution.get_districts(NEW.geometry)
						WHERE id = NEW.id ;
					RETURN NEW;				
				END;
				</programlisting>
      </para>
    </section>

<!-- Function valve_schemaview() -->
    <section id="distribution.function.valve-schemaview"
             xreflabel="distributionvalve_schemaview()">
      <title id="distribution.function.valve-schemaview-title">
       valve_schemaview()
      </title>
      <titleabbrev id="distribution.function.valve-schemaview-titleabbrev">
       valve_schemaview()
      </titleabbrev>

      <para>
       <segmentedlist>
        <title>Function Properties</title>
        <?dbhtml list-presentation="list"?>
        <segtitle>Language</segtitle>
        <segtitle>Return Type</segtitle>
        <seglistitem>
         <seg>PLPGSQL</seg>
         <seg>trigger</seg>
        </seglistitem>
       </segmentedlist>
 
       
        <programlisting>
			DECLARE
				force_view boolean;
			BEGIN
				IF NEW.schema_force_view IS NULL THEN
					SELECT schema_view FROM distribution.valve_function WHERE id = NEW.id_function INTO force_view;
				ELSE 
					force_view := NEW.schema_force_view;
				END IF;
				UPDATE distribution.valve SET _schema_view = force_view WHERE id = NEW.id;
				RETURN NEW;
			END;
		</programlisting>
      </para>
    </section>

  </chapter>

</book>

